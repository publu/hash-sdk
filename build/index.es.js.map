{"version":3,"file":"index.es.js","sources":["../node_modules/tslib/tslib.es6.js","../src/sum/index.ts","../src/ui-utils/index.ts","../src/validators/common.ts","../src/utils/index.ts","../src/images/resources/hardware-wallet.ts","../src/images/resources/software-sdk.ts","../src/images/resources/composer-logo.ts","../src/images/index.ts","../src/constants/style/index.ts","../src/ui-modules/styles/cardStyle.ts","../src/ui-modules/styles/stylesMain.ts","../src/ui-modules/middlewareSelector/index.ts","../src/ui-modules/styles/accountStyle.ts","../src/ui-modules/accountSetter/index.ts","../src/account/index.ts","../src/middleware/index.ts","../src/helper/index.ts","../src/hedera/accountinfo.ts","../src/hedera/cryptotransfer.ts","../src/hedera/contractcall.ts","../src/constants/defaults/index.ts","../src/hedera/contractdeploy.ts","../src/hedera/filecreate.ts","../src/hedera/fileretrieve.ts","../src/hedera/topiccreate.ts","../src/hedera/topicupdate.ts","../src/hedera/topicinfo.ts","../src/hedera/topicdelete.ts","../src/hedera/submitmessage.ts","../src/validators/accountinfoDataValidation copy.ts","../src/validators/cryptotransferDataValidation.ts","../src/validators/contractcallDataValidation.ts","../src/validators/contractdeployDataValidation.ts","../src/validators/filecreateDataValidation.ts","../src/validators/fileretrieveDataValidation.ts","../src/validators/topiccreateDataValidation.ts","../src/validators/topicupdateDataValidation.ts","../src/validators/topicinfoDataValidation.ts","../src/validators/topicdeleteDataValidation.ts","../src/validators/submitMessageDataValidation.ts","../src/validators/index.ts","../src/controller/index.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const sum = (a: number, b: number): number => a + b\n","// import {stylesMain} from '../ui-modules/styles/stylesMain';\n\nexport const customElementInjector = async(element:string|HTMLElement,targetTag='body' as string) =>{  \n    const customElement :HTMLElement= typeof element === 'string' ? document.createElement(element) : element;\n    const parentTag = document.querySelector(targetTag);\n    parentTag && parentTag.appendChild(customElement);\n} \n\nexport const elementDestructor = (element:string|HTMLElement):void =>{\n    const customElementName :string= typeof element === 'string' ? element : element.tagName.toLowerCase();\n    const targetTag = document.querySelector(customElementName);\n    targetTag && targetTag.parentNode ? targetTag.parentNode.removeChild(targetTag):null;\n}\n\nexport const internalStyleDestructor = (id:string):void =>{\n    const headTag = document.querySelector('head');\n    const targetStyleElement = document.querySelector(`#${id}`);\n    targetStyleElement ? headTag?.removeChild(targetStyleElement):null;\n}\n\n","\nimport {util} from '../utils'\nimport { SHA3 } from 'sha3';\n\n/**\n * Validates if given value is of type string\n * @param {any} s refers to value passed by function caller\n * @returns {string | Boolean} returns string if true and false respectively\n */\nconst isString = (s:any) => typeof s === 'string' ? s : false;\n\n/**\n * Validates if given value is of type number\n * @param {any} n refers to value passed by function caller\n * @returns {number | Boolean} returns number if true and false respectively\n */\nconst isNumber = (n:any) => !isNaN(Number(n)) ? Number(n) : false;\n\n/**\n * Validates if given value is accountId address(0x.. or 0000.. [hex])\n * @param {any} id refers to value passed by function caller\n * @returns {Boolean} returns account id  of type string if true and false respectively\n */\nconst isAccountIdAddress = (id:string) => {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(id)) {\n        return false;\n    // If it's ALL lowercase or ALL upppercase\n    } else if(/^(0x|0X)?[0-9a-f]{40}$/.test(id) || /^(0x|0X)?[0-9A-F]{40}$/.test(id)) {\n        return true;\n    // Otherwise check each case\n    } else {\n        return checkAddressChecksum(id);\n    }\n}\n\n/**\n * Validates if given value is accountId address(0x.. or 0000.. [hex])\n * @param {any} id refers to value passed by function caller\n * @returns {Boolean} returns validation\n */\nconst checkAddressChecksum =(address:string)=> {\n    // Check each case\n    // address = address.replace(/^0x/i, '');\n    var addressHash = new SHA3().update(address.toLowerCase().replace(/^0x/i, '')).digest(\"hex\")//SHA3Hash(address.toLowerCase()).replace(/^0x/i, '');\n\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n/**\n * Validates if given value is accountIdlike(0.0.12345)\n * @param {any} id refers to value passed by function caller\n * @returns {string | Boolean} returns account id  of type string if true and false respectively\n */\nconst isAccountIdLike = (id:any) => id && typeof id === 'string' && id.split('.').length === 3 && !isNaN(Number(id.split('.')[0])) && !isNaN(Number(id.split('.')[1])) && !isNaN(Number(id.split('.')[2])) ? id : false;\n\n/**\n * Validates if given value is account Object{shard:0,realm:0,contract|account|file|topic:1234}\n * @param {any} id refers to value passed by function caller\n * @returns {Object | Boolean} returns account id  of type object if true and false respectively\n */\nconst isAccountIdObject = (id:any) => id && typeof id === 'object'  && id.shard && id.realm && (id.account || id.file || id.contract || id.topic) ? id : false ;\n\n/**\n * Validates if given value is hedera id of type account Id and account Object\n * @param {any} id refers to value passed by function caller\n * @returns {string | Boolean} returns account id  of type string if true and false respectively\n */\nconst isHederaId = (id:any):Object|string|Boolean => id && typeof id === 'string' && id.split('.').length === 3 ? id : typeof id === 'object' && id.shard && id.realm && (id.account || id.file || id.contract || id.topic) ? id : false;\n\n/**\n * Validates if given value is an array\n * @param {string[] | Array<string>} arr refers to value passed by function caller\n * @returns {Array | Boolean} returns array or false respectively\n */\nconst validateArrayList = (arr:any) => {\n    try {\n        if (arr && Array.isArray(arr) && arr.length>0) {\n            return arr;\n        }else if(JSON.parse(arr)){\n            return JSON.parse(arr);\n        }else{\n            return false;\n        }\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Validates if array has list of account addresses \n * @param {Array} addArr refers to value passed by function caller\n * @returns {Array | Boolean} returns array or false respectively\n */\nconst isAddressArray =(addArr:any)=> {\n    let newArray :Array<string>= [];\n    if (Array.isArray(addArr) && addArr.length > 0) {\n        addArr.forEach((a:string):any => {\n            a = util.accountIdToHexAddress(a);\n            if (!isAccountIdAddress(a)) {\n                return false\n            }\n            newArray.push(a);\n        })\n        return newArray;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Validates recipient List\n * @param {string[] | Array<string>} recipientList refers to value passed by function caller\n * @returns {Array | Boolean} returns recipient list or false if invalid\n*/\nconst validateRecipientList = (recipientList:any) => {\n    recipientList = validateArrayList(recipientList)\n    if (recipientList === false) {\n        return false;\n    }\n    let requestedPayment = 0\n    for (var k in recipientList) {\n        requestedPayment += parseInt(recipientList[k].tinybars)\n        try {\n           common.isAccountIdLike(recipientList[k].to)\n        } catch (e) {\n            return false\n        }\n    }\n    if (isNaN(requestedPayment)) {\n        return false\n    }\n    return recipientList\n}\n\nexport const common = {\n    isString,\n    isNumber,\n    isAccountIdLike,\n    isHederaId,\n    validateArrayList,\n    validateRecipientList,\n    isAccountIdObject,\n    isAccountIdAddress,\n    isAddressArray\n}\n\n","import { common } from '../validators/common';\nimport BigNumber from \"bignumber.js\"\n\n\n/**\n * Converts any string to bytes[]\n * @param {string} s refers to value passed by function caller\n * @returns {Uint8Array} returns unit8 array bytes[]\n */\nconst stringToBytes = (s:string):Uint8Array => {\n    let arrayBuffer = new ArrayBuffer(s.length * 1);\n    let newUint = new Uint8Array(arrayBuffer);\n    newUint.forEach((_, i) => {\n        newUint[i] = s.charCodeAt(i);\n    });\n    return newUint;\n}\n\n/**\n * Gives the bytes size of a given string\n * @param {string} s refers to value passed by function caller\n * @returns {number} returns size in bytes\n */\nconst stringToBytesSize = (s:string):number => {\n    if(s){\n        s=s.toString();\n        // returns the byte length of an utf8 string\n        var size = s.length;\n        for (var i=s.length-1; i>=0; i--) {\n        var code = s.charCodeAt(i);\n        if (code > 0x7f && code <= 0x7ff) size++;\n        else if (code > 0x7ff && code <= 0xffff) size+=2;\n        if (code >= 0xDC00 && code <= 0xDFFF) i--; //trail surrogate\n        }\n        return size;\n    }else{\n        return 0;\n    }   \n}\n\n/**\n * Copies bytes from given range\n * @param {string} start refers to start of copying range\n * @param {string} length refers to size copying range\n * @param {Uint8Array} bytes refers to original bytes\n * @returns {number} returns copied bytes\n */\nconst copyBytes = (start:number, length:number, bytes:any) => {\n    let newUint = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        newUint[i] = bytes[start + i];\n    }\n    return newUint;\n}\n\n/**\n * Gives the account id object\n * @param {string} id refers to value passed by function caller\n * @param {type} type refers to type of account id(account, contract,file,topic)\n * @returns {Object} returns account id object\n */\nconst getAccountIdLikeToObj = (id:string,type:string='account'):object => {\n    const idArr = id.split('.');\n    return {shard:Number(idArr[0]),realm:Number(idArr[1]),[type]:Number(idArr[2])};\n}\n\n/**\n * Gives the account id like string\n * @param {Object} id refers to value passed by function caller\n * @returns {string} returns account id string\n */\nconst getAccountObjToIdLike = (id:Object):string => {\n    const values:Array<string> = Object.keys(id);\n    return `${values[0]}.${values[1]}.${values[2]}.`;\n}\n\n/**\n * Gives the full account id Object that contains all types of id format\n * @param {string|Object|number} id refers to value passed by function caller\n * @returns {Object} returns object with different id types\n */\nconst getAccountIdObjectFull = (id:string|Object|number,type:string='account') => {\n    id = common.isHederaId(id);\n    let accountObj = {\n        accountIdLike:'',\n        accountIdObject:{}\n    }\n    if(!id){\n        return id;\n    }\n    if(common.isAccountIdLike(id)){\n        accountObj.accountIdLike = id.toString();\n        accountObj.accountIdObject = getAccountIdLikeToObj(id.toString(),type);\n        return accountObj;\n    }\n    else if(common.isAccountIdObject(id)){\n        accountObj.accountIdLike = getAccountObjToIdLike(id);\n        accountObj.accountIdObject = id;\n        return accountObj;\n    }\n    else{\n        return id;\n    }\n}\n\n/**\n * Gives a string of the error \n * @param {any} e refers to error value passed by function caller\n * @returns {Object} returns error string\n */\nconst getFriendlyErrorObject = (e:any):Object => {\n    const errorString = typeof e === 'string' ? e : typeof e.message === 'string' ? e.message :  typeof e.msg === 'string' ? e.msg : 'Sorry, Something went wrong!';\n    return {\n        errorString,\n        error:e\n    }\n}\n\n/**\n * Add up the amount in recipient list\n * @param {Array} recipientList\n * @returns {any} returns hedera client\n */\nconst sumFromRecipientList = (recipientList:any) => {\n    //@TODO REctify the function\n    // recipientList must always exist\n    if (recipientList === undefined || recipientList.length === 0) {\n        // undefined is only returned when there recipientList is invalid\n        return 0;\n    }\n    let requestedPayment = 0\n    for (var k in recipientList) {\n        requestedPayment += parseInt(recipientList[k].tinybars)\n    }\n    return requestedPayment\n}\n\n/**\n * Checks if provider is set globally\n * @returns {any} returns boolean\n */\nconst isProviderSet = () =>{\n    return ((window)as any).provider ? ((window)as any).provider :false;\n}\n\n/**\n * Checks string is Array\n * @returns {any} returns string[] or string\n */\nconst convertIfArray=(value:any)=>{\n    try {\n        if (value && typeof value === \"string\" && (/^[\\],:{}\\s]*$/.test(value.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n            replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n            replace(/(?:^|:|,)(?:\\s*\\[)+/g, '')))) {\n            if (common.validateArrayList(value)) {\n                return JSON.parse(value);\n            } else {\n                return value;\n            }\n        } else {\n            return value;\n        }\n    } catch (e) {\n        throw Error('Invalid Array[]');\n    }\n}\n\n/**\n * Normalizes values of array\n * @param {string[] | Array<string>} arr refers to value passed by function caller\n * @returns {Array | Boolean} returns recipient list or false if invalid\n*/\nconst normalizeArrayValues = (arr:string[]|Array<string>)=> {\n    if (arr && Array.isArray(arr) && arr.length > 0) {\n        return arr.map((a) => convertIfArray(a))\n    }\n    return arr;\n}\n\n/**\n * Boolean creator\n * @param {any} val refers to value passed by function caller\n * @returns {Boolean} returns Boolean\n*/\nconst getBool =(val:any)=> {\n    return Boolean(!!JSON.parse(String(val).toLowerCase()));\n}\n\n/**\n * BigNumber convertor\n * @param {number} n refers to value passed by function caller\n * @returns {Boolean} returns BigNumber\n*/\nconst toBigNumber=(n:any)=> {\n    n = typeof n !== 'number' ? Number(n) : n;\n    return new BigNumber(n);\n}\n\n/**\n * AccountId to Hexadecimal address convertor\n * @param {string} accountId refers to value passed by function caller\n * @returns {Boolean} returns hexAddress\n*/\nconst accountIdToHexAddress =(accountId:string)=> {\n    let defaultAddress = '0000000000000000000000000000000000000000';\n    let accountNo = accountId.split('.')[2];\n    let hexAddressRaw = parseInt(accountNo).toString(16);\n    let remainingCount = 40 - hexAddressRaw.length;\n    let hexAddress = defaultAddress.substr(0, remainingCount) + hexAddressRaw + defaultAddress.substr(remainingCount + hexAddressRaw.length)\n    return hexAddress;\n}\n\n/**\n * Creates a String Array\n * @param {Array} arr refers to value passed by function caller\n * @returns {Array<string>} returns String array\n*/\nconst createStringArray =(arr:any)=> {\n    arr = Array.isArray(arr) ? arr : JSON.parse(arr);\n    arr = arr.map((s:string|number) => {\n        return s.toString();\n    })\n    return arr;\n}\n\n/**\n * Creates a Number Array\n * @param {Array} arr refers to value passed by function caller\n * @returns {Array<string>} returns Array of Numbers\n*/\nconst createNumberArray=(arr:any)=> {\n    let newArr :Array<number>= [];\n    arr.forEach((n:any):void|false=>{\n        n = Number(n);\n        if (!isNaN(n)) {\n            newArr.push(n);\n        } else {\n            return false;\n        }\n    })\n    return newArr;\n}\n\n/**\n * Creates a BigNumber Array\n * @param {Array} arr refers to value passed by function caller\n * @returns {Array<string>} returns Array of BigNumbers\n*/\nconst createBigNumberArray=(arr:any)=> {\n    let newArr :Array<BigNumber>= [];\n    arr.forEach((n:any):void|false => {\n        n = toBigNumber(n);\n        if (!isNaN(n)) {\n            newArr.push(n);\n        } else {\n            return false;\n        }\n    })\n    return newArr;\n}\n\n/**\n * Creates hexadecimal to Decimal\n * @param {string} hexString refers to value passed by function caller\n * @returns {Array<string>} returns decimal value\n*/\nconst hexToDecimal = (hexString:string) => {\n    return parseInt(hexString, 16);\n}\n\n/**\n * Creates hexadecimal to AccountId\n * @param {string} hexString refers to value passed by function caller\n * @returns {Array<string>} returns account Id format (0.0.12345)\n*/\nconst hexToAccountID = (hexString:string) => {\n    const value = hexToDecimal(hexString);\n    return `0.0.${value}`;\n}\n\n/**\n * Converts hexadecimal to String\n * @param {string} hex refers to value passed by function caller\n * @returns {Array<string>} returns string\n*/\nconst hexToString = (hex:string) => {\n    var str = '';\n    for (var n = 2; n < hex.length; n += 2) {\n        str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n    }\n    return str;\n}\n\n/**\n * Extracts constructor from abi\n * @param {Array} abi refers to value passed by function caller\n * @returns {Array<string>} returns string\n*/\nconst getConstructorFromAbi =(abi:any)=> {\n    abi.forEach((abiObj:any) => {\n        if (abiObj.type === \"constructor\") {\n            return abiObj;\n        }\n    });\n}\n\n/**\n * Signature based mime-type store\n * @param {string} signature refers to value passed by function caller\n * @returns {string} returns mime-type\n*/\nconst getMimetype = (signature:any) => {\n    switch (signature) {\n        case '89504E47':\n            return 'image/png'\n        case '47494638':\n            return 'image/gif'\n        case '25504446':\n            return 'application/pdf'\n        case 'FFD8FFDB':\n        case 'FFD8FFE0':\n        case 'FFD8FFE1':\n            return 'image/jpeg'\n        case '504B0304':\n            return 'application/zip'\n        default:\n            return 'Unknown filetype'\n    }\n}\n\n/**\n * Detect File type based on buffer\n * @param {Uint8Array} buffer refers to value passed by function caller\n * @returns {string} returns mime-type\n*/\nconst detectFileType =(buffer:Uint8Array)=>{\n   // const uint = new Uint8Array(buffer)\n    let bytes :any= [];\n    buffer.forEach((byte) => {\n        bytes.push(byte.toString(16))\n    })\n    const hex = bytes.join('').toUpperCase();\n    return getMimetype(hex);\n}\n\n/**\n * Creates URL from SVG string\n * @param {string} svg refers to value passed by function caller\n * @returns {string} returns image url\n*/\nconst svgToUrlGenerator = (svg:string) =>{\n    let blob = new Blob([svg], {type: 'image/svg+xml'});\n    return URL.createObjectURL(blob);\n}\n\nexport const util = {\n    stringToBytes,\n    stringToBytesSize,\n    getAccountIdObjectFull,\n    getAccountIdLikeToObj,\n    getAccountObjToIdLike,\n    getFriendlyErrorObject,\n    sumFromRecipientList,\n    isProviderSet,\n    normalizeArrayValues,\n    convertIfArray,\n    getBool,\n    toBigNumber,\n    accountIdToHexAddress,\n    createStringArray,\n    createNumberArray,\n    createBigNumberArray,\n    hexToAccountID,\n    hexToDecimal,\n    hexToString,\n    getConstructorFromAbi,\n    copyBytes,\n    getMimetype,\n    detectFileType,\n    svgToUrlGenerator\n}\n","export const hardwareWallet = `<?xml version=\"1.0\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Capa_1\" enable-background=\"new 0 0 512 512\" height=\"512px\" viewBox=\"0 0 512 512\" width=\"512px\" class=\"\"><g><g><path d=\"m361 7.5v210h-135l105-210z\" fill=\"#acd2f6\" data-original=\"#ACD2F6\" class=\"\" style=\"fill:#ACD2F6\"/><path d=\"m331 7.5v60l-30 15 30 15v120h-180v-210z\" fill=\"#c4f3ff\" data-original=\"#C4F3FF\" style=\"fill:#C4F3FF\" class=\"\"/><path d=\"m211 67.5-15 15 15 15h30v-30z\" fill=\"#4e4cd3\" data-original=\"#4E4CD3\" class=\"\" style=\"fill:#18B1D0\" data-old_color=\"#4e4cd3\"/><path d=\"m181 67.5h30v30h-30z\" fill=\"#666ddc\" data-original=\"#666DDC\" style=\"fill:#66C3DC\" class=\"\" data-old_color=\"#666ddc\"/><path d=\"m301 67.5-15 15 15 15h30v-30z\" fill=\"#4e4cd3\" data-original=\"#4E4CD3\" class=\"\" style=\"fill:#18B1D0\" data-old_color=\"#4e4cd3\"/><path d=\"m271 67.5h30v30h-30z\" fill=\"#666ddc\" data-original=\"#666DDC\" style=\"fill:#66C3DC\" class=\"\" data-old_color=\"#666ddc\"/><path d=\"m361 157.5-180 75h210v-75z\" fill=\"#ff545a\" data-original=\"#FF545A\" style=\"fill:#548AFF\" class=\"active-path\" data-old_color=\"#ff545a\"/><path d=\"m121 157.5h240v75h-240z\" fill=\"#ff7647\" data-original=\"#FF7647\" style=\"fill:#4793FF\" class=\"\" data-old_color=\"#ff7647\"/><path d=\"m391 187.5-30 30v287h30c16.569 0 30-13.431 30-30v-287z\" fill=\"#5c2bc8\" data-original=\"#5C2BC8\" class=\"\" style=\"fill:#2B89C8\" data-old_color=\"#5c2bc8\"/><path d=\"m91 187.5v287c0 16.569 13.431 30 30 30h240c16.569 0 30-13.431 30-30v-287z\" fill=\"#4e4cd3\" data-original=\"#4E4CD3\" class=\"\" style=\"fill:#18B1D0\" data-old_color=\"#4e4cd3\"/><circle cx=\"256\" cy=\"429.5\" fill=\"#05ff77\" r=\"15\" data-original=\"#05FF77\" style=\"fill:#05FF77\"/><path d=\"m241 60h-60c-4.142 0-7.5 3.358-7.5 7.5v30c0 4.142 3.358 7.5 7.5 7.5h60c4.142 0 7.5-3.358 7.5-7.5v-30c0-4.142-3.358-7.5-7.5-7.5zm-7.5 30h-45v-15h45z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/><path d=\"m331 60h-60c-4.142 0-7.5 3.358-7.5 7.5v30c0 4.142 3.358 7.5 7.5 7.5h60c4.142 0 7.5-3.358 7.5-7.5v-30c0-4.142-3.358-7.5-7.5-7.5zm-7.5 30h-45v-15h45z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/><path d=\"m421 180h-22.5v-22.5c0-4.142-3.358-7.5-7.5-7.5h-22.5v-142.5c0-4.142-3.358-7.5-7.5-7.5h-210c-4.142 0-7.5 3.358-7.5 7.5v142.5h-22.5c-4.142 0-7.5 3.358-7.5 7.5v22.5h-22.5c-4.142 0-7.5 3.358-7.5 7.5v128.5c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-121h315v279.5c0 12.407-10.093 22.5-22.5 22.5h-270c-12.407 0-22.5-10.093-22.5-22.5v-128.5c0-4.142-3.358-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v128.5c0 20.678 16.822 37.5 37.5 37.5h270c20.678 0 37.5-16.822 37.5-37.5v-287c0-4.142-3.358-7.5-7.5-7.5zm-262.5-165h195v135h-195zm-30 150h255v15h-255z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/><path d=\"m278.5 429.5c0-12.407-10.093-22.5-22.5-22.5s-22.5 10.093-22.5 22.5 10.093 22.5 22.5 22.5 22.5-10.093 22.5-22.5zm-30 0c0-4.136 3.364-7.5 7.5-7.5s7.5 3.364 7.5 7.5-3.364 7.5-7.5 7.5-7.5-3.364-7.5-7.5z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/></g></g> \n</svg>`;\n","export const softwareSdk = `<?xml version=\"1.0\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Layer_1_1_\" x=\"0px\" y=\"0px\" viewBox=\"0 0 64 64\" style=\"enable-background:new 0 0 64 64;\" xml:space=\"preserve\" width=\"512px\" height=\"512px\" class=\"\"><g><g>\n\t<g>\n\t\t<rect x=\"16\" y=\"20\" style=\"fill:#18B1D0\" width=\"32\" height=\"13\" data-original=\"#F0BC5E\" class=\"active-path\" data-old_color=\"#F0BC5E\"/>\n\t</g>\n\t<g>\n\t\t<g>\n\t\t\t<path style=\"fill:#18B1D0\" d=\"M34.781,63h-5.562l-0.625-2.503c-0.802-0.237-1.576-0.559-2.313-0.96l-2.214,1.328l-3.932-3.932     l1.328-2.214c-0.401-0.737-0.723-1.512-0.96-2.313L18,51.781v-5.562l2.503-0.625c0.237-0.802,0.559-1.576,0.96-2.313     l-1.328-2.214l3.932-3.932l2.214,1.328c0.737-0.401,1.512-0.723,2.313-0.96L29.219,35h5.562l0.625,2.503     c0.802,0.237,1.576,0.559,2.313,0.96l2.214-1.328l3.932,3.932l-1.328,2.214c0.401,0.737,0.723,1.512,0.96,2.313L46,46.219v5.562     l-2.503,0.625c-0.237,0.802-0.559,1.576-0.96,2.313l1.328,2.214l-3.932,3.932l-2.214-1.328c-0.737,0.401-1.512,0.723-2.313,0.96     L34.781,63z\" data-original=\"#F0BC5E\" class=\"active-path\" data-old_color=\"#F0BC5E\"/>\n\t\t</g>\n\t</g>\n\t<g>\n\t\t<rect x=\"16\" y=\"27\" width=\"32\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"35\" y=\"31\" width=\"13\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"16\" y=\"31\" width=\"13\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"35\" y=\"23\" width=\"13\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"16\" y=\"23\" width=\"13\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"16\" y=\"19\" width=\"32\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<path d=\"M52,39c0,2.206-1.794,4-4,4v2c3.309,0,6-2.691,6-6v-5.171c0-1.557,0.606-3.021,1.707-4.122L56.414,29l-0.707-0.707    C54.606,27.192,54,25.729,54,24.171V19c0-3.309-2.691-6-6-6v2c2.206,0,4,1.794,4,4v5.171c0,1.773,0.585,3.457,1.665,4.829    C52.585,30.372,52,32.056,52,33.829V39z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<path d=\"M12,19c0-2.206,1.794-4,4-4v-2c-3.309,0-6,2.691-6,6v5.171c0,1.557-0.606,3.021-1.707,4.122L7.586,29l0.707,0.707    C9.394,30.808,10,32.271,10,33.829V39c0,3.309,2.691,6,6,6v-2c-2.206,0-4-1.794-4-4v-5.171c0-1.773-0.585-3.457-1.665-4.829    C11.415,27.628,12,25.944,12,24.171V19z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<path d=\"M32,45c-2.206,0-4,1.794-4,4s1.794,4,4,4s4-1.794,4-4S34.206,45,32,45z M32,51c-1.103,0-2-0.897-2-2s0.897-2,2-2    s2,0.897,2,2S33.103,51,32,51z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<path d=\"M32,41c-1.328,0-2.645,0.333-3.807,0.962l0.953,1.759C30.017,43.25,31.003,43,32,43c3.309,0,6,2.691,6,6    c0,0.997-0.25,1.983-0.721,2.854l1.759,0.953C39.667,51.645,40,50.328,40,49C40,44.589,36.411,41,32,41z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<path d=\"M32,55c-3.309,0-6-2.691-6-6c0-0.997,0.25-1.983,0.721-2.854l-1.759-0.953C24.333,46.355,24,47.672,24,49    c0,4.411,3.589,8,8,8c1.328,0,2.645-0.333,3.807-0.962l-0.953-1.759C33.983,54.75,32.997,55,32,55z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<path d=\"M60,1H4C2.346,1,1,2.346,1,4v46h17v-2H3V11h58v37H46v2h17V4C63,2.346,61.654,1,60,1z M3,9V4c0-0.551,0.449-1,1-1h56    c0.551,0,1,0.449,1,1v5H3z\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"5\" y=\"5\" width=\"2\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"9\" y=\"5\" width=\"2\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t\t<rect x=\"13\" y=\"5\" width=\"2\" height=\"2\" data-original=\"#000000\" class=\"\" style=\"fill:#000000\" data-old_color=\"#000000\"/>\n\t</g>\n</g></g> </svg>`;\n","export const composerLogo = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"50px\" height=\"50px\" viewBox=\"0 0 50 50\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <defs>\n        <circle id=\"path-1\" cx=\"25\" cy=\"25\" r=\"25\"></circle>\n    </defs>\n    <g id=\"Pages\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"deploy\" transform=\"translate(-651.000000, -5315.000000)\">\n            <g id=\"Group-4\" transform=\"translate(651.000000, 5315.000000)\">\n                <g id=\"api_icon\">\n                    <mask id=\"mask-2\" fill=\"white\">\n                        <use xlink:href=\"#path-1\"></use>\n                    </mask>\n                    <use id=\"Oval\" fill=\"#1EBEFF\" xlink:href=\"#path-1\"></use>\n                    <polygon id=\"Rectangle\" fill=\"#A1E4FF\" mask=\"url(#mask-2)\" points=\"15 15 32 15 50 33 50 50 33 50 15 32\"></polygon>\n                    <rect id=\"Rectangle\" fill=\"#1EBEFF\" mask=\"url(#mask-2)\" x=\"15\" y=\"15\" width=\"17\" height=\"17\"></rect>\n                    <polygon id=\"Path-4\" fill=\"#FFFFFF\" mask=\"url(#mask-2)\" points=\"15 32 0 32 0 0 32 0 32 15 15 15\"></polygon>\n                </g>\n            </g>\n        </g>\n    </g>\n</svg>`;","import {util} from '../utils';\nimport {hardwareWallet} from './resources/hardware-wallet';\nimport {softwareSdk} from './resources/software-sdk';\nimport {composerLogo} from './resources/composer-logo';\n\nexport const Images = {\n    hardwareWallet:util.svgToUrlGenerator(hardwareWallet),\n    softwareSDKImage:util.svgToUrlGenerator(softwareSdk),\n    composerLogo:util.svgToUrlGenerator(composerLogo)\n}\n\n","export const theme ={\n    default:{\n\n        white:'rgba(255,255,255,1)',\n        black:'rgba(0,0,0,1)',\n\n        // Common\n        primaryColor:'rgb(24, 189, 208)',\n        secondaryColor:'rgb(7,228,183)',\n        \n        // Button\n        buttonUnImportantColor:'rgba(0,0,0,0.1)',\n        buttonPrimary:'rgba(81, 197, 255,1)',\n        buttonRadius:'7px',\n\n        // Modal \n        modalOverlayColor:'rgba(0,0,0,0.6)',\n        modalRadius:'15px',\n        modalZindex:'999'\n        \n    }\n}\n","import { theme } from '../../constants/style';\n\nconst t = theme['default'];\n\n \nexport const cardStyle = `\n    .card-container{\n        padding:18px 12px;\n        font-family:inherit;\n        margin:25px 18px;\n        border-radius:6px;\n        flex:1;\n        display:flex;\n        flex-direction:column;\n        align-items:center;\n        box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.3);\n        -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.3);\n        -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.3);\n        text-align:center;min-width: 100px;\n        transition: all 0.2s ease;\n    }\n\n    .card-container:hover{\n        background:rgb(35, 234, 181);\n        color:${t.white};\n        transform: scale(1.05);\n    }\n\n    middleware-card .card-img{\n        width:60px;\n        height:auto;\n    }\n\n    middleware-card .card-title{\n        margin-top: 8px;\n        font-size: 18px;\n    }\n\n    middleware-card .card-desc{\n        margin-top: 6px;\n        font-size: 12px;\n        color:rgba(0,0,0,0.6);\n        font-style:italic;\n    }\n\n    middleware-card .card-recommended{\n        margin-top: 6px;\n        font-size: 12px;\n        color:rgb(234, 92, 110,0.7);\n    }\n`\n\n","import { theme } from '../../constants/style';\n\nconst t = theme['default'];\n\n \nexport const stylesMain = `\n    .modal-parent{\n        position:fixed;\n        display:flex;\n        font-family:inherit;\n        align-items: center;\n        justify-content:center;\n        width:100%;height:100%;\n        left:0;\n        top:0;\n        overflow:hidden;\n        z-index:${t.modalZindex};\n        background:${t.modalOverlayColor};\n    }\n\n    middleware-selector .modal-container{\n        position:relative;\n        width:100%;\n        max-width:600px;\n        max-height:800px;\n        margin:15px;\n        background:${t.white};\n        border-radius:${t.modalRadius};\n    }\n\n    middleware-selector .modal-header{\n        display: flex;\n        justify-content: \n        space-between;\n        background:${t.primaryColor};\n        padding: 14px 16px;\n        border-top-left-radius: ${t.modalRadius};\n        border-top-right-radius: ${t.modalRadius};\n        color: ${t.white};\n    }\n\n    middleware-selector .cancel-btn{\n        cursor:pointer;\n        font-size:20px;\n    }\n\n    middleware-selector .modal-body{\n        display:flex;\n        flex-wrap:wrap;\n    }\n\n    middleware-selector .modal-title{\n        font-size:20px;\n    }\n\n    middleware-selector .cancel-button{\n        font-size:20px;\n        cursor:pointer;\n    }\n`\n\n","import {\n    customElementInjector,\n    internalStyleDestructor,\n    elementDestructor\n} from '../../ui-utils/index';\nimport {Images} from '../../images';\nimport {cardStyle} from '../../ui-modules/styles/cardStyle';\nimport {stylesMain} from '../../ui-modules/styles/stylesMain';\n\nconst myCustomElement = 'middleware-selector';\nconst customElementModalTitle = 'Select a middleware';\n\n\ninterface IcardData{\n    id:string,\n    title:string,\n    provider:string,\n    description:string,\n    imagePath:string,\n    active:Boolean,\n    recommended:Boolean\n}\n\nconst cardData :Array<IcardData>= [\n    {\n        id:'option-1',\n        title:'Hardware',\n        provider:'hardware',\n        description:'Ledger Nano (Hardware Wallet)',\n        imagePath: Images.hardwareWallet,\n        active:false,\n        recommended:true\n    },\n    {\n        id:'option-2',\n        title:'Composer',\n        provider:'composer',\n        description:'Extension based wallet (Private Key, Keystore, Mnemonic phrase)',\n        imagePath: Images.composerLogo,\n        active:true,\n        recommended:true\n    },\n    {\n        id:'option-3',\n        title:'Software',\n        provider:'software',\n        description:'SDK based wallet (Private Key, Keystore, Mnemonic phrase)',\n        imagePath: Images.softwareSDKImage,\n        active:true,\n        recommended:false\n    },\n\n]\n\nexport const renderMiddlewareSelectorUI =(cb?:Function)=> {\n\n    try{\n\n        // Element creation.\n        const parentDiv = document.createElement(myCustomElement);\n        const modalContainer = document.createElement('div');\n        const modalHeader = document.createElement('div');\n        const modalBody = document.createElement('div');\n        const modalFooter = document.createElement('div');\n        const cancelButton = document.createElement('span');\n        const modalTitle = document.createElement('span');\n\n        // Element Styles\n        if(!document.querySelector(`#${myCustomElement}-style`)){\n            const styleTag :HTMLStyleElement= document.createElement(\"style\");\n            styleTag.id = 'hash-sdk-style'\n            styleTag.innerHTML = stylesMain;\n            document.getElementsByTagName(\"head\")[0].appendChild(styleTag);\n        }\n        \n        // Element Identification\n        parentDiv.setAttribute('class','modal-parent');\n        modalContainer.setAttribute('class','modal-container');\n        modalHeader.setAttribute('class','modal-header');\n        modalFooter.setAttribute('class','modal-footer');\n        modalBody.setAttribute('class','modal-body');\n        modalTitle.setAttribute('class','modal-title');\n        cancelButton.setAttribute('class','cancel-btn');\n\n        // Fetching dynamic variables\n        cancelButton.innerHTML=\"&#x2715\";\n        modalTitle.innerHTML=`${customElementModalTitle}`;\n\n        \n        \n        renderUICard(cardData,modalBody,(opt:IcardData)=>{\n            cb && cb(null,opt);\n            removeMiddlewareUI();\n        });\n\n        parentDiv.onclick = function(event:any){\n            if(event && event.target && event.target.tagName && event.target.tagName.toLowerCase() === myCustomElement){\n                removeMiddlewareUI();\n            }\n        }\n\n        cancelButton.onclick = function(){\n            removeMiddlewareUI();\n        }\n        \n        // Element Merging and Finalization\n        modalHeader.appendChild(modalTitle);\n        modalHeader.appendChild(cancelButton);\n        modalContainer.appendChild(modalHeader);\n        modalContainer.appendChild(modalBody);\n        modalContainer.appendChild(modalFooter);\n        parentDiv.appendChild(modalContainer);\n        customElementInjector(parentDiv);\n            \n    }catch(e){\n        console.error('Error in renderMiddlewareSelectorUI:::',e);\n        cb && cb(e);\n    }\n\n}\n\nconst renderUICard = (data:Array<IcardData>,targetElement:HTMLElement,cb?:Function):void =>{\n    \n    if(!document.querySelector('#hash-card-style')){\n        const styleTag :HTMLStyleElement= document.createElement(\"style\");\n        styleTag.id = 'hash-card-style';\n        styleTag.innerHTML = cardStyle;\n        document.getElementsByTagName(\"head\")[0].appendChild(styleTag);\n    }\n\n    if(Array.isArray(data) && data.length>0){\n\n        for(let d of data){\n            const cardData :IcardData= d;\n            const newUICard = document.createElement('middleware-card');\n            newUICard.id = cardData.id;\n            newUICard.setAttribute('class','card-container');\n\n            newUICard.style.cssText = `${cardData.active ? 'cursor:pointer;':'pointer-events:none;filter: grayscale(1);background: rgba(0,0,0,0.1);'}`\n\n            //Image\n            const cardImg = document.createElement('img');\n            cardImg.setAttribute('class','card-img');\n            cardImg.src = cardData.imagePath;\n\n            // Title Text\n            const titleTextEle = document.createElement('div');\n            titleTextEle.setAttribute('class','card-title');\n            titleTextEle.innerHTML = cardData.title;\n\n            // Description Text\n            const desc = document.createElement('div');\n            desc.setAttribute('class','card-desc');\n            desc.innerHTML = cardData.description;\n            \n            // Recommendation\n            const notRecommended = document.createElement('div');\n            notRecommended.setAttribute('class','card-recommended');\n            notRecommended.innerHTML = cardData.recommended ? '' : 'Not Recommended';\n\n            newUICard.appendChild(cardImg);\n            newUICard.appendChild(titleTextEle);\n            newUICard.appendChild(desc);\n            newUICard.appendChild(notRecommended);\n\n            newUICard.onclick = function(){\n                cb && cb(d);\n            }\n\n            targetElement.appendChild(newUICard);\n        }\n    }\n}\n\n\nexport const removeMiddlewareUI =()=> {\n    internalStyleDestructor('hash-sdk-style');\n    internalStyleDestructor('hash-card-style');\n    elementDestructor(myCustomElement);\n}","import { theme } from '../../constants/style';\n\nconst t = theme['default'];\n\n \nexport const accountStyle = `\n    .modal-parent{\n        position:fixed;\n        display:flex;\n        font-family:inherit;\n        align-items: center;\n        justify-content:center;\n        width:100%;height:100%;\n        left:0;\n        top:0;\n        overflow:hidden;\n        z-index:${t.modalZindex};\n        background:${t.modalOverlayColor};\n    }\n\n    account-setter .modal-container{\n        position:relative;\n        width:100%;\n        max-width:600px;\n        max-height:800px;\n        margin:15px;\n        background:${t.white};\n        border-radius:${t.modalRadius};\n    }\n\n    account-setter .modal-header{\n        display: flex;\n        justify-content: \n        space-between;\n        background:${t.primaryColor};\n        padding: 14px 16px;\n        border-top-left-radius: ${t.modalRadius};\n        border-top-right-radius: ${t.modalRadius};\n        color: ${t.white};\n    }\n\n    account-setter .close-btn{\n        cursor:pointer;\n        font-size:20px;\n    }\n\n    account-setter .modal-body{\n        display: flex;\n        justify-content: center;\n    }\n\n    account-setter .modal-body-wrapper{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        flex-wrap:wrap;\n        flex: 1;\n        margin: 15px 20px;\n    }\n\n    account-setter .input-wrapper{\n        width: 100%;\n        margin:10px 0px;\n    }\n\n    account-setter .input-ele{\n        width: calc(100% - 20px);\n        padding:0px 10px;\n        height: 36px;\n        border-radius: 4px;\n        font-size: 14px;\n        background: rgba(255,255,255,1);\n        border: 1px solid rgba(0,0,0,0.2);\n    }\n\n    select.input-ele{\n        width: 100%;\n    }\n\n    account-setter .label-input{\n        font-size: 14px;\n        opacity:0.8;\n    }\n\n    account-setter .modal-title{\n        font-size:20px;\n    }\n\n    account-setter .close-button{\n        font-size:20px;\n        cursor:pointer;\n    }\n\n    account-setter button{\n        border-radius: 5px;\n        border: none;\n        font-size: 15px;\n        padding: 10px 20px;\n        margin:10px;\n        cursor:pointer;\n        opacity:0.8;\n        transition:all 0.2s ease;\n    }\n\n    account-setter button:hover{\n        opacity:1;\n        transform:scale(1.02);\n    }\n\n    account-setter .modal-footer{\n        display:flex;\n        justify-content:center;\n    }\n\n    .cancel-btn{\n        background: rgba(0,0,0,0.05);\n    }\n\n    .confirm-btn{\n        background: ${t.secondaryColor};\n    }\n`\n\n","import {\n    customElementInjector,\n    elementDestructor,\n    internalStyleDestructor\n} from '../../ui-utils/index';\nimport { accountStyle } from '../styles/accountStyle';\n\ninterface INetwork{\n    id:string,\n    title:string,\n    value:string\n}\n\nconst myCustomElement = 'account-setter';\nconst customElementModalTitle = 'Set account';\nconst networks:Array<INetwork> = [\n    {\n        id:\"n1\",\n        title:'Test Network',\n        value:'testnet'\n    },\n    {\n        id:\"n2\",\n        title:'Main Network',\n        value:'mainnet'\n    }\n]\n\nexport const renderAccountSetterUI =(cb?:Function)=> {\n\n    try{\n\n        // Element creation.\n        const parentDiv = document.createElement(myCustomElement);\n        const modalContainer = document.createElement('div');\n        const modalHeader = document.createElement('div');\n        const modalBody = document.createElement('div');\n        const modalBodyWrapper = document.createElement('div');\n        const modalFooter = document.createElement('div');\n        const closeButton = document.createElement('span');\n        const modalTitle = document.createElement('span');\n\n        const networkInput = document.createElement('select');\n        const accountIdInput = document.createElement('input');\n        const privateInput = document.createElement('input');\n\n        const confirmButton = document.createElement('button');\n        const cancelButton = document.createElement('button');\n\n\n\n        // Element Styles\n        if(!document.querySelector(`#${myCustomElement}-style`)){\n            const styleTag :HTMLStyleElement= document.createElement(\"style\");\n            styleTag.id = 'hash-sdk-style'\n            styleTag.innerHTML = accountStyle;\n            document.getElementsByTagName(\"head\")[0].appendChild(styleTag);\n        }\n        \n        // Element Identification\n        parentDiv.setAttribute('class','modal-parent');\n        modalContainer.setAttribute('class','modal-container');\n        modalHeader.setAttribute('class','modal-header');\n        modalFooter.setAttribute('class','modal-footer');\n        modalBody.setAttribute('class','modal-body');\n        modalBodyWrapper.setAttribute('class','modal-body-wrapper');\n        modalTitle.setAttribute('class','modal-title');\n        closeButton.setAttribute('class','close-btn');\n\n        cancelButton.setAttribute('class','cancel-btn');\n        confirmButton.setAttribute('class','confirm-btn');\n\n        networkInput.setAttribute('class','network-input');\n        accountIdInput.setAttribute('class','account-input');\n        privateInput.setAttribute('class','account-input');\n\n\n        // Fetching dynamic variables\n        closeButton.innerHTML=\"&#x2715\";\n        accountIdInput.placeholder = ' 0.0.1234(Account Id)';\n        privateInput.placeholder = ' Private Key';\n\n        modalTitle.innerHTML=`${customElementModalTitle}`;\n        cancelButton.innerHTML = 'CANCEL';\n        confirmButton.innerHTML = 'VALIDATE & SET';\n        networks.forEach((n,i)=>{\n            if(i===0){\n                const option = document.createElement('option');\n                option.setAttribute('key',i.toString());\n                option.innerHTML = 'Choose Network';\n                option.selected = true;\n                option.disabled = true;\n                networkInput.appendChild(option);\n            }\n            const option = document.createElement('option');\n            option.setAttribute('key',(i+1).toString());\n            option.innerHTML = n.title;\n            option.value=n.value;\n            networkInput.appendChild(option);\n        })\n        \n\n        renderLabeledWrappedUI('Network',networkInput,modalBodyWrapper);\n        renderLabeledWrappedUI('Account Id',accountIdInput,modalBodyWrapper);\n        renderLabeledWrappedUI('Private Key',privateInput,modalBodyWrapper);\n\n\n        parentDiv.onclick = function(event:any){\n            if(event && event.target && event.target.tagName && event.target.tagName.toLowerCase() === myCustomElement){\n                removeAccountSetterUI();\n            }\n        }\n\n        closeButton.onclick = function(){\n            removeAccountSetterUI();\n        }\n\n        cancelButton.onclick = function(){\n            removeAccountSetterUI();\n        }\n        \n        confirmButton.onclick = function(){\n            let accountData = {\n                accountId : accountIdInput.value,\n                network : networkInput.value,\n                keys : {\n                    privateKey:privateInput.value\n                },\n                mnemonics:''\n            }\n            handleSetAccount(accountData);\n        }\n\n        // Element Merging and Finalization\n        modalHeader.appendChild(modalTitle);\n        modalHeader.appendChild(closeButton);\n        modalContainer.appendChild(modalHeader);\n        modalBody.appendChild(modalBodyWrapper);\n        modalContainer.appendChild(modalBody);\n        modalFooter.appendChild(cancelButton);\n        modalFooter.appendChild(confirmButton);        \n        modalContainer.appendChild(modalFooter);\n        parentDiv.appendChild(modalContainer);\n        customElementInjector(parentDiv);\n            \n    }catch(e){\n        console.error('Error in renderMiddlewareSelectorUI:::',e);\n        cb && cb(e);\n    }\n\n}\n\nconst renderLabeledWrappedUI = (labelText:string,inputElement:HTMLElement,targetElement:HTMLElement) =>{\n    const inputWrapper = document.createElement('div');\n    const label = document.createElement('div');\n\n    inputWrapper.setAttribute('class','input-wrapper');\n    label.setAttribute('class','label-input');\n\n    label.innerHTML = labelText;\n    inputElement.setAttribute('class','input-ele')\n    inputWrapper.appendChild(label);\n    inputWrapper.appendChild(inputElement);\n    targetElement.appendChild(inputWrapper); \n}\n\nconst removeAccountSetterUI =()=> {\n    internalStyleDestructor('hash-sdk-style');\n    elementDestructor(myCustomElement);\n}\n\nconst handleSetAccount = (accountData:Object) =>{\n    (window as any).HashAccount = accountData;\n    removeAccountSetterUI();\n}","\nimport { renderAccountSetterUI } from '../ui-modules/accountSetter';\n// interface IKeys{\n//     privateKey:string,\n//     publicKey?:string,\n//     mnemonics?:string\n// }\n\nexport const setAccount = (cb?:Function) => {\n    return new Promise((resolve,reject)=>{\n        renderAccountSetterUI((err:any,res:any):any=>{\n            // setMiddleware(res.provider);\n            cb && cb(err,res);\n            err ? reject(err) : resolve(res);\n        });\n    })\n}\n","import {renderMiddlewareSelectorUI} from '../ui-modules/middlewareSelector';\nimport {setAccount} from '../account'\n\nexport const selectProvider = (cb?:Function) => {\n    return new Promise((resolve,reject)=>{\n        renderMiddlewareSelectorUI((err:any,res:any):any=>{\n            setProvider(res.provider);\n            if(((window)as any).provider === 'software'){\n                //@TODO handle below\n              setAccount();\n            }else{\n                cb && cb(err,res);\n                err ? reject(err) : resolve(res);\n            }\n        });\n    })\n}\n\nconst setProvider = (provider:string) => {\n\n    ((window)as any).provider = provider;\n\n    switch(provider){\n        case 'hardware':\n            //@TODO include when hardware comes in\n            break;\n        \n        case 'composer':\n           \n            break;\n        \n        case 'software':\n            break;\n    }\n}\n","import {util} from '../utils';\nimport {common} from '../validators/common';\nimport { \n    Client,Ed25519PrivateKey,\n    ContractFunctionParams,\n    FileCreateTransaction,\n    FileAppendTransaction,\n    ContractCreateTransaction\n} from '@hashgraph/sdk'\nimport {IAccountIdLike,IOperator} from '../interface';\n\n\n/**\n * Merges abi and params to return hedera compatible data\n * @param {Array} abi refers to abi array value passed by caller\n * @param {Array} params refers to params aarray value passed by caller\n * @returns {any} returns functionParams \n*/\nconst getContractFunctionParams = (abi:any, params:any)=> {\n    \n    // Function params instance\n    let functionParams = new ContractFunctionParams();\n\n    if (abi && abi.inputs && abi.inputs.length > 0) {\n        try {\n            abi.inputs.forEach((data:any, index:number) => {\n                if (common.isString(data.type)) {\n                    const value = params[index].toString();\n                    if (value) {\n                        if (common.isString(value)) {\n                            functionParams.addString(value)\n                        } else {\n                            throw Error('Input is not string')\n                        }\n                    } else {\n                        throw Error('Input string can not be empty')\n                    }\n                } else if (data.type == \"bool\") {\n                    if (params[index] === true || params[index] === false) {\n                        functionParams.addBool(params[index])\n                    } else if (params[index] == \"true\" || params[index] == \"false\") {\n                        const value = util.getBool(params[index]);\n                        if (typeof value === 'boolean') {\n                            functionParams.addBool(value)\n                        } else {\n                            throw Error('Input is not boolean(true/false)')\n                        };\n                    } else {\n                        throw Error('Input boolean can not be empty')\n                    }\n                } else if (data.type == \"int32\") {\n                    const value = Number(params[index]);\n                    if (common.isNumber(value)) {\n                        functionParams.addInt32(value)\n                    } else {\n                        throw Error('Input is not a valid Int32 number')\n                    };\n                } else if (data.type == \"int64\") {\n                    const value = Number(params[index]);\n                    if (common.isNumber(value)) {\n                        functionParams.addInt64(util.toBigNumber(params[index]))\n                    } else {\n                        throw Error('Input is not a valid Int64 number')\n                    };\n                } else if (data.type == \"int256\") {\n                    const value = Number(params[index]);\n                    if (common.isNumber(value)) {\n                        functionParams.addInt256(util.toBigNumber(params[index]))\n                    } else {\n                        throw Error('Input is not a valid Int256 number')\n                    };\n                } else if (data.type == \"uint32\") {\n                    const value = Number(params[index]);\n                    if (common.isNumber(value)) {\n                        functionParams.addUint32(value)\n                    } else {\n                        throw Error('Input is not a valid Uint32 number')\n                    };\n                } else if (data.type == \"uint64\") {\n                    const value = Number(params[index]);\n                    if (common.isNumber(value)) {\n                        functionParams.addUint64(util.toBigNumber(params[index]))\n                    } else {\n                        throw Error('Input is not a valid Uint64 number')\n                    };\n                } else if (data.type == \"uint256\") {\n                    const value = Number(params[index]);\n                    if (common.isNumber(value)) {\n                        functionParams.addUint256(util.toBigNumber(params[index]))\n                    } else {\n                        throw Error('Input is not a valid uint256 number')\n                    };\n                } else if (data.type === \"address\") {\n                    const value = util.accountIdToHexAddress(params[index].toString());\n                    if (common.isAccountIdAddress(value)) {\n                        functionParams.addAddress(value)\n                    } else {\n                        throw Error('Input is not a valid address(string)')\n                    };\n                } else if (data.type == \"string[]\") {\n                    let value = params[index];\n                    if (Array.isArray(value)) {\n                        value = util.createStringArray(value);\n                        functionParams.addStringArray(value)\n                    } else {\n                        throw Error('Input is not a valid string array')\n                    };\n                } else if (data.type == \"int32[]\") {\n                    let value = Array.isArray(params[index]) ? util.createNumberArray(params[index]) : false;\n                    if (value) {\n                        functionParams.addInt32Array(value)\n                    } else {\n                        throw Error('Input is not a valid int32(number) array')\n                    };\n                } else if (data.type == \"int64[]\") {\n                    let value = Array.isArray(params[index]) ? util.createBigNumberArray(params[index]) : false;\n                    if (value) {\n                        functionParams.addInt64Array(value)\n                    } else {\n                        throw Error('Input is not a valid int64(number) array')\n                    };\n                } else if (data.type == \"int256[]\") {\n                    let value = Array.isArray(params[index]) ? util.createBigNumberArray(params[index]) : false;\n                    if (value) {\n                        functionParams.addInt256Array(value)\n                    } else {\n                        throw Error('Input is not a valid int256(number) array')\n                    };\n                } else if (data.type == \"uint32[]\") {\n                    let value = Array.isArray(params[index]) ? util.createNumberArray(params[index]) : false;\n                    if (value) {\n                        functionParams.addUint32Array(value)\n                    } else {\n                        throw Error('Input is not a valid int32(number) array')\n                    };\n                } else if (data.type == \"uint64[]\") {\n                    let value = Array.isArray(params[index]) ? util.createBigNumberArray(params[index]) : false;\n                    if (value) {\n                        functionParams.addUint64Array(value)\n                    } else {\n                        throw Error('Input is not a valid int64(number) array')\n                    };\n                } else if (data.type == \"uint256[]\") {\n                    let value = Array.isArray(params[index]) ? util.createBigNumberArray(params[index]) : false;\n                    if (value) {\n                        functionParams.addUint256Array(value)\n                    } else {\n                        throw Error('Input is not a valid int256(number) array')\n                    };\n                } else if (data.type == \"address[]\") {\n                    const value = common.isAddressArray(params[index])\n                    if (value) {\n                        functionParams.addAddressArray(value)\n                    } else {\n                        throw Error('Input is not a valid address(string) array')\n                    };\n                } else if (data.type == \"bytes\") {\n                    let value = params[index];\n                    if (value) {\n                        functionParams.addBytes(value.toString())\n                    } else {\n                        throw Error('Input can not be empty bytes')\n                    }\n                } else if (data.type == \"bytes[]\") {\n                    let value = params[index];\n                    if (Array.isArray(value)) {\n                        functionParams.addBytesArray(value)\n                    } else {\n                        throw Error('Input is not a valid bytes array')\n                    };\n                }\n            })\n            return functionParams;\n        } catch (e) {\n            throw Error(e.message || \"Error while creating ContractFunctionParams\")\n        }\n    } else {\n        return functionParams;\n    }\n}\n/**\n * Create a valid hedera client\n * @param {Object} operator\n * @param {Object} network\n * @returns {any} returns hedera client\n */\n\nconst createHederaClient = (operator:IOperator,network:string) => {\n    const currentNetwork = network;\n    let client\n    if (currentNetwork == 'testnet') {\n        client = new Client({\n            operator: operator\n        })\n    } else {\n        client = new Client({\n            network: {\n                \"https://proxy.hashingsystems.com\": { shard: 0, realm: 0,  account: 3 }\n            },\n            operator: operator\n        });\n    }\n    return client;\n}\n\n/**\n * Create a valid hedera Operator\n * @param {Object} account\n * @param {string} privateKey\n * @returns {any} returns hedera client operator\n */\nconst createClientOperator = (account:IAccountIdLike,privatekey:string) => {\n    const privateKey = Ed25519PrivateKey.fromString(privatekey)\n    return {\n        account,\n        privateKey\n    }\n}\n\n/**\n * Create a hedera file\n * @param {Client} client\n * @param {Object} firstPartBytes\n * @param {Date}  expirationTime\n * @param {number} txFee\n * @param {string} memo\n * @returns {any} returns receipt\n */\nconst createFile = async(client:any, firstPartBytes:any, expirationTime:any, txFee:number, memo:string)=> {\n    let transactionId = await new FileCreateTransaction()\n        .setContents(firstPartBytes)\n        .setExpirationTime(expirationTime)\n        .addKey(client._getOperatorKey())\n        .setTransactionMemo(memo)\n        .setMaxTransactionFee(txFee)\n        .execute(client);\n    const response = await transactionId.getReceipt(client);\n    return { ...response }\n}\n\n/**\n * Appends file content to an already created hedera file\n * @param {Client} client\n * @param {Object} fileId\n * @param {string} contents\n * @param {number} txFee\n * @returns {any} returns receipt\n */\nconst appendFile = async(client:any, fileId:any, contents:any, txFee:number)=> {\n    let transactionId = await new FileAppendTransaction()\n        .setFileId(fileId)\n        .setContents(contents)\n        .setMaxTransactionFee(txFee)\n        .execute(client);\n\n    let response = await transactionId.getReceipt(client);\n    return { ...response }\n}\n\n/**\n * Creates Contract transaction with fileId\n * @param {Client} client\n * @param {Object} fileId\n * @param {any} constructorParams\n * @param {number} amount\n * @param {number} gasFee\n * @param {number} txFee\n * @param {string} memo\n * @param {Date} autoRenewPeriod\n * @returns {any} returns receipt\n */\nconst createContractTx = async(client:any,fileId:any, constructorParams:any, amount :number=0, gasFee:number, txFee:number,memo:string, autoRenewPeriod:any) => {\n    //autoRenewPeriod = autoRenewPeriod + 0; // Just to evade tslint\n    let transactionId = await new ContractCreateTransaction()\n        .setBytecodeFileId(fileId)\n        .setGas(gasFee)\n        .setAutoRenewPeriod(autoRenewPeriod)\n        .setAdminKey(client._getOperatorKey())\n        .setConstructorParams(constructorParams)\n        .setInitialBalance(amount)\n        .setTransactionMemo(memo)\n        .setMaxTransactionFee(txFee)\n        .execute(client);\n    const receipt = await transactionId.getReceipt(client);\n    return {\n        receipt: { ...receipt },\n        transactionId\n    }\n}\n\nexport const helper ={\n    createClientOperator,\n    createHederaClient,\n    getContractFunctionParams,\n    createFile,\n    appendFile,\n    createContractTx\n}","import {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle getting account Info based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const accountInfoController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n            const provider = ((window)as any).provider;\n            const {accountId} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for account info comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = accountId ? util.getAccountIdObjectFull(accountId) : util.getAccountIdObjectFull(accountData.accountId);\n\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n\n                    let updatedData :any= {\n                        accountData,\n                        account,\n                        client,\n                    }\n\n                    let response :any= await accountInfo(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-balance\");\n                    hederaTag.setAttribute(\"data-accountID\", data.accountId || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst accountInfo = async(data:any) =>{\n    const {client,account,accountData} = data;\n    const balance = (await client.getAccountBalance(client._getOperatorAccountId())).asTinybar().toString();\n    const network = accountData.network || 'Not Set';\n\n    return{\n        accountId:account.accountIdLike,\n        currentNetwork:network,\n        balance\n    }\n}\n\n","import { CryptoTransferTransaction } from '@hashgraph/sdk'\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle crypto transfer based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const cryptoTransferController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n            const provider = ((window)as any).provider;\n            const {recipientList,memo} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for crypto comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // sender details\n                    let fromAccount :any= {};\n                    fromAccount.acc = accountData.accountId.split('.')[2];\n                    fromAccount.privateKey= accountData.privateKey;\n\n                    // send amount \n                    let amount = util.sumFromRecipientList(recipientList);\n                    \n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n\n                    let updatedData :any= {\n                        amount,\n                        memo,\n                        account,\n                        client,\n                        toAccount:util.getAccountIdLikeToObj(recipientList[0].to),\n                    }\n\n                    let response :any= await cryptoTransfer(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-micropayment\");\n                    hederaTag.setAttribute(\"data-time\", '');\n                    hederaTag.setAttribute(\"data-memo\", memo || ' ');\n                    hederaTag.setAttribute(\"data-contentid\", '');\n                    hederaTag.setAttribute(\"data-type\", '');\n                    hederaTag.setAttribute(\"data-redirect\", '');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-recipientlist\", JSON.stringify(recipientList) || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst cryptoTransfer = async(data:any) =>{\n   const transactionId = await new CryptoTransferTransaction()\n       .addSender(data.account.accountIdObject, data.amount)\n       .addRecipient(data.toAccount, data.amount)\n       .setTransactionMemo(data.memo)\n       //.setTransactionFee(1000000)\n       .execute(data.client);\n   const receipt = await transactionId.getReceipt(data.client);\n\n    return({\n        nodePrecheckcode: receipt.status.code,\n        receiptStatus: receipt.status.code,\n        transactionId: transactionId\n    })\n}\n\n","import { ContractExecuteTransaction, Status } from '@hashgraph/sdk';\nimport { AbiCoder } from 'web3-eth-abi';\nimport forge from 'node-forge';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle contract call based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const contractCallController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,transactionfee,amount,gasfee,contractId,functionParams,abi} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for contract call comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Converting to Object form\n                    const contractIdLike = util.getAccountIdLikeToObj(contractId,'contract');\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    let updatedData :any= {\n                        abi,\n                        amount,\n                        memo,\n                        account,\n                        client,\n                        contractId:contractIdLike,\n                        functionParams,\n                        transactionfee,\n                        gasfee\n                    }\n\n                    let response :any= await contractCall(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-contract\");\n                    hederaTag.setAttribute(\"data-contractid\", data.contractId || '');\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-params\", data.params ? JSON.stringify(data.params) : '[]');\n                    hederaTag.setAttribute(\"data-abi\", JSON.stringify(data.abi) || '');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-gasfee\", data.gasfee || '');\n                    hederaTag.setAttribute(\"data-transactionfee\", data.transactionfee || '');\n                    hederaTag.setAttribute(\"data-amount\", data.amount || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst contractCall = async(data:any) =>{\n    const {memo,contractId,transactionfee,amount,gasfee,abi,client,functionParams} = data;\n    let transactionId = await new ContractExecuteTransaction()\n    .setContractId(contractId)\n    .setFunction(abi[0].name, functionParams)\n    .setMaxTransactionFee(parseInt(transactionfee))\n    .setGas(gasfee)\n    .setTransactionMemo(memo)\n    .setPayableAmount(amount)\n    .execute(client);\n\n    let contractCallRecord = await transactionId.getRecord(client);\n\n    if (contractCallRecord && contractCallRecord.receipt && contractCallRecord.receipt.status.code == Status.Success.code) {\n\n        let finalResult = {\n            status: \"success\",\n            ok: true,\n            code: 200,\n            message: \"\",\n            result: []\n        }\n\n        if (abi[0].outputs && abi[0].outputs.length > 0 && contractCallRecord.getContractExecuteResult() && contractCallRecord.getContractExecuteResult().asBytes().length > 0) {\n            const abiCoder = new AbiCoder()\n            let result = abiCoder.decodeParameters(abi[0].outputs, '0x' + forge.util.bytesToHex((contractCallRecord.getContractExecuteResult().asBytes() as any)).toString())\n            if (result) {\n                let resultArray :any= [];\n                Object.keys(result).forEach(function (key, index) {\n                    if (index < abi[0].outputs.length) {\n                        let output = \"\" + result[key];\n\n                        if (abi[0].outputs[index].type.toString().includes(\"[]\")) {\n                            let valuesArray = output.split(',');\n                            valuesArray.forEach(element => {\n                                if (abi[0].outputs[index].type == \"address[]\") {\n                                    element = util.hexToAccountID(element);\n                                } else if (abi[0].outputs[index].type == \"bytes[]\") {\n                                    element = util.hexToString(element);\n                                }\n                                resultArray.push(element);\n                            });\n                        } else if (abi[0].outputs[index].type == \"bytes\") {\n                            output = util.hexToString(output);\n                            resultArray.push(output);\n                        } else {\n                            if (abi[0].outputs[index].type == \"address\") {\n                                output = util.hexToAccountID(output);\n                            }\n                            resultArray.push(output);\n                        }\n                    }\n                })\n                finalResult.result = resultArray;\n            }\n        }\n        return finalResult;\n       \n    } else {\n        let message = contractCallRecord && contractCallRecord.getContractExecuteResult() ? contractCallRecord.getContractExecuteResult().errorMessage : \"\"\n        throw message;\n    }\n}\n\n","const CONTRACT_CALL ={\n    TRANSACTION_FEE:700000000, //given in Tinybars,\n    GAS_FEE:10000000 //given in Tinybars\n}\n\nconst CONTRACT_DEPLOY ={\n    TRANSACTION_FEE:2500000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n    EXPIRATION_TIME:7890000000, //given in Milliseconds\n    AUTORENEW_PERIOD:7890000 //given in Milliseconds\n}\n\nconst FILE_CREATE ={\n    TRANSACTION_FEE:500000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n    EXPIRATION_TIME:7890000000, //given in Milliseconds\n    FILE_SIZE:0 //given in bytes\n}\n\nconst FILE_RETRIEVE ={\n    TRANSACTION_FEE:500000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n}\n\nconst TOPIC_CREATE ={\n    TRANSACTION_FEE:200000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n    AUTORENEW_PERIOD:0, //given in Milliseconds\n}\n\nconst TOPIC_UPDATE ={\n    TRANSACTION_FEE:200000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n    AUTORENEW_PERIOD:0, //given in Milliseconds\n}\n\nconst TOPIC_INFO ={\n    TRANSACTION_FEE:200000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n}\n\nconst TOPIC_DELETE ={\n    TRANSACTION_FEE:200000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n}\n\nconst SUBMIT_MESSAGE ={\n    TRANSACTION_FEE:200000000, //given in Tinybars,\n    GAS_FEE:10000000, //given in Tinybars\n}\n\nexport const defaults ={\n    CONTRACT_CALL,\n    CONTRACT_DEPLOY,\n    FILE_CREATE,\n    FILE_RETRIEVE,\n    TOPIC_CREATE,\n    TOPIC_UPDATE,\n    TOPIC_INFO,\n    TOPIC_DELETE,\n    SUBMIT_MESSAGE\n}","import { Status } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\nimport {defaults} from '../constants/defaults';\n\n/**\n * A function to handle contract deploy based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const contractDeployController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,transactionfee,amount,gasfee,fileId,expirationTime,bytecode,abi,params,functionParams} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for contract deploy comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Converting to Object form\n                    const fileIdLike = fileId ? util.getAccountIdLikeToObj(fileId,'file') : null;\n\n                    // Converting to date format\n                    const expirationtime = Date.now() + expirationTime;\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    let updatedData :any= {\n                        abi,\n                        amount,\n                        memo,\n                        account,\n                        client,\n                        fileId:fileIdLike,\n                        transactionfee,\n                        gasfee,\n                        functionParams,\n                        expirationtime,\n                        bytecode,\n                        params\n                    }\n\n                    let response :any= await contractDeploy(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-deploy-contract\");\n                    hederaTag.setAttribute(\"data-fileid\", data.fileId || '');\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-params\", data.params ? JSON.stringify(data.params): '[]');\n                    hederaTag.setAttribute(\"data-abi\", JSON.stringify(data.abi) || '');\n                    hederaTag.setAttribute(\"data-bytecode\", data.bytecode || '');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-gasfee\", data.gasfee || '');\n                    // @TODO extension not accepting txs fees\n                    hederaTag.setAttribute(\"data-transactionfee\", '');\n                    hederaTag.setAttribute(\"data-amount\", data.amount || '');\n                    hederaTag.setAttribute(\"data-expirationTime\", data.expirationTime ||'');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst contractDeploy = async(data:any) =>{\n\n    const {memo,transactionfee,amount,gasfee,client,bytecode,expirationtime,functionParams} = data;\n    let {fileId} = data;\n    const autoRenewPeriod = defaults.CONTRACT_DEPLOY.AUTORENEW_PERIOD;\n\n    if (!fileId) {\n        let fileCreateTx = await fileCreateDeploy(client,bytecode, memo, transactionfee, expirationtime);\n        if (fileCreateTx.status.code === Status.Success.code) {\n            fileId = (fileCreateTx as any)._fileId\n        } else {\n            return fileCreateTx\n        }\n    }\n\n    let contractCreateResult = await helper.createContractTx(client,fileId, functionParams, amount, gasfee, parseInt(transactionfee), memo, autoRenewPeriod);\n    // const contractId = (contractCreateResult.receipt as any)._contractId;\n    \n    const contractDeployTx = { ...contractCreateResult.receipt }\n\n    if (contractDeployTx.status.code === Status.Success.code) {\n        return contractDeployTx;\n    } else {\n        throw (contractDeployTx as any).codeName || 'Error in Contract deployment'\n    }\n}\n\nconst fileCreateDeploy = async(client:any,bytecode:string, memo :string= \"Composer File Create\",txFee:number,expirationTime:any)=> {\n   \n    if (!bytecode) {\n        throw new Error('Bytecode can not be empty!')\n    }\n\n    let contents = util.stringToBytes(bytecode);\n\n    let FILE_PART_SIZE = 2800; // 3K bytes\n    let numParts = Math.floor(contents.length / FILE_PART_SIZE);\n    let remainder = contents.length % FILE_PART_SIZE;\n    var firstPartBytes = null;\n    let moreContents = false;\n\n    if (contents.length <= FILE_PART_SIZE) {\n        firstPartBytes = contents;\n        remainder = 0;\n    } else {\n        moreContents = true;\n        firstPartBytes = util.copyBytes(0, FILE_PART_SIZE, contents);\n    }\n\n    let fileReceipt = await helper.createFile(client, firstPartBytes, expirationTime, txFee, memo);\n\n    if (moreContents) {\n        if (fileReceipt.status.code === Status.Success.code) {\n            const fileId = (fileReceipt as any)._fileId\n\n            for (let i = 1; i < numParts; i++) {\n                let partBytes = util.copyBytes(i * FILE_PART_SIZE, FILE_PART_SIZE, contents);\n                const fileAppendResult = await helper.appendFile(client, fileId, partBytes, txFee)\n                if (fileAppendResult.status.code !== Status.Success.code) {\n                    throw new Error(\"Error Appending File\");\n                }\n            }\n\n            if (remainder > 0) {\n                let partBytes = await util.copyBytes(numParts * FILE_PART_SIZE, remainder, contents);\n                const fileAppendResult = await helper.appendFile(client, fileId, partBytes, txFee)\n                if (fileAppendResult.status.code !== Status.Success.code) {\n                    throw new Error(\"Error Appending Last Chunks\");\n                }\n            }\n\n        }\n    }\n    return fileReceipt;\n}","import { Status } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle file create based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const fileCreateController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,contents,transactionfee,gasfee,expirationTime} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for file create comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Converting to date format\n                    const expirationtime = Date.now() + expirationTime;\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    let updatedData :any= {\n                        memo,\n                        contents,\n                        account,\n                        client,\n                        transactionfee,\n                        gasfee,\n                        expirationtime,\n                    }\n\n                    let response :any= await fileCreate(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    // @TODO shift tag names to constants\n                    let hederaTag = document.createElement(\"hedera-file-create\");\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-fileContent\", JSON.stringify(data.fileContent) || '');\n                    hederaTag.setAttribute(\"data-fileSize\", data.fileSize || '');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    // @TODO extension not accepting txs fees\n                    hederaTag.setAttribute(\"data-transactionfee\",'');\n                    hederaTag.setAttribute(\"data-expirationTime\", data.expirationTime || '' );\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst fileCreate = async(data:any) =>{\n    const {memo,contents,transactionfee,client,expirationtime} = data;\n\n    let FILE_PART_SIZE = 2800; // 3K bytes\n    let numParts = Math.floor(contents.length / FILE_PART_SIZE);\n    let remainder = contents.length % FILE_PART_SIZE;\n    var firstPartBytes = null;\n    let moreContents = false;\n\n    if (contents.length <= FILE_PART_SIZE) {\n        firstPartBytes = contents;\n        remainder = 0;\n    } else {\n        moreContents = true;\n        firstPartBytes = util.copyBytes(0, FILE_PART_SIZE, contents);\n    }\n\n    let fileReceipt = await helper.createFile(client, firstPartBytes, expirationtime, transactionfee, memo);\n    \n    // @INFO If u need transaction Id\n    // let transactionId = (fileReceipt as any).transactionId;\n    \n    fileReceipt = { ...(fileReceipt as any) };\n    if (moreContents) {\n        if (fileReceipt.status.code === Status.Success.code) {\n            const fileId = (fileReceipt as any)._fileId\n            for (let i = 1; i < numParts; i++) {\n                let partBytes = util.copyBytes(i * FILE_PART_SIZE, FILE_PART_SIZE, contents);\n                const fileAppendResult = await helper.appendFile(client, fileId, partBytes, transactionfee)\n                if (fileAppendResult.status.code !== Status.Success.code) {\n                    throw new Error(\"Error Appending File\");\n                }\n            }\n            if (remainder > 0) {\n                let partBytes = util.copyBytes(numParts * FILE_PART_SIZE, remainder, contents);\n                const fileAppendResult = await helper.appendFile(client, fileId, partBytes, transactionfee)\n                if (fileAppendResult.status.code !== Status.Success.code) {\n                    throw new Error(\"Error Appending Last Chunks\");\n                }\n            }\n        }\n    }\n\n    if (fileReceipt.status.code === Status.Success.code) {\n       return fileReceipt;\n    } else {\n        throw (fileReceipt as any).codeName;\n    }\n}","import { FileContentsQuery } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n\n/**\n * A function to handle file retrieve based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const fileRetrieveController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,fileId,transactionfee,gasfee} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for file retrieve comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    let updatedData :any= {\n                        memo,\n                        fileId,\n                        account,\n                        client,\n                        transactionfee,\n                        gasfee,\n                    }\n\n                    let response :any= await fileRetrieve(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-file-retrieve\");\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-fileId\", data.fileId || '');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    // @TODO extension not accepting txs fees\n                    hederaTag.setAttribute(\"data-transactionfee\",'');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst fileRetrieve = async(data:any) =>{\n    const {fileId,transactionfee,client} = data;\n\n    let fileQueryResp = await new FileContentsQuery()\n        .setFileId(fileId)\n        .setMaxQueryPayment(transactionfee)\n        .execute(client);\n  \n    let contentAsString = Buffer.from(fileQueryResp).toString();\n    const type = await util.detectFileType(fileQueryResp);\n\n    let response = {\n        fileType: type,\n        contents: Array.from(fileQueryResp),\n        contentAsString: contentAsString\n    }\n    return response;\n}","import { ConsensusTopicCreateTransaction,KeyList,Ed25519PublicKey } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle topic create based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const topicCreateController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,submitKeyList,autoRenewAccount,autoRenewPeriod,transactionfee,gasfee} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for topic create comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    let updatedData :any= {\n                        memo,\n                        submitKeyList,\n                        autoRenewAccount,\n                        autoRenewPeriod,\n                        account,\n                        client,\n                        transactionfee,\n                        gasfee,\n                    }\n\n                    let response :any= await topicCreate(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-topic-create\");\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-transactionfee\", data.transactionfee || '');\n                    hederaTag.setAttribute(\"data-submitkeylist\", data.submitKeyList ? JSON.stringify(data.submitKeyList): '');\n                    hederaTag.setAttribute(\"data-expirationtime\", data.expirationTime || '');\n                    hederaTag.setAttribute(\"data-autorenewperiod\", data.autoRenewPeriod || '');\n                    hederaTag.setAttribute(\"data-autorenewaccount\", data.autoRenewAccount || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst topicCreate = async(data:any) =>{\n    const {client,memo,autoRenewAccount,autoRenewPeriod,submitKeyList,transactionfee,expirationTime} = data;\n\n    let transactionId :any= await new ConsensusTopicCreateTransaction()\n        .setTopicMemo(memo)\n        .setMaxTransactionFee(transactionfee)\n        .setAdminKey(client._operatorPublicKey)\n\n    // Sets expiry if given\n    if (expirationTime && !isNaN(expirationTime)) {\n        transactionId.setExpirationTime(Date.now() + expirationTime)\n    }\n\n    // Sets autoRenewPeriod if given\n    if (autoRenewPeriod && !isNaN(autoRenewPeriod)) {\n        transactionId.setAutoRenewPeriod(autoRenewPeriod)\n    }\n\n    // Sets autoRenewAccount if given\n    if (autoRenewAccount) {\n        transactionId.setAutoRenewAccount(autoRenewAccount)\n    }\n\n    if (submitKeyList && submitKeyList.length > 0) {\n        let keyList = new KeyList()\n        for (let k of submitKeyList) {\n            keyList.add(Ed25519PublicKey.fromString(k))\n        }\n        transactionId = await transactionId.setSubmitKey(keyList)\n    }\n\n    // Execution to create topic\n    transactionId = await transactionId.execute(client)\n\n    // Fetch transaction reciept\n    const transactionReceipt = await transactionId.getReceipt(client)\n\n    // Get the newly generated topic Id\n    const topicId = transactionReceipt.getConsensusTopicId()\n\n    let response = ({\n         nodePrecheckcode: transactionReceipt.status.code,\n         receiptStatus: transactionReceipt.status.code,\n         transactionId,\n         topicId\n     })\n\n    return response;\n}","import { ConsensusTopicUpdateTransaction,KeyList,Ed25519PublicKey,ConsensusTopicId } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle topic update based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const topicUpdateController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,submitKeyList,autoRenewPeriod,transactionfee,gasfee} = data;\n            let {topicId,autoRenewAccount} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for topic update comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n\n                    // Converting to Object form\n                    topicId = util.getAccountIdLikeToObj(topicId,'topic');\n                    autoRenewAccount = autoRenewAccount ? util.getAccountIdLikeToObj(autoRenewAccount,'account'):autoRenewAccount;\n                 \n                    let updatedData :any= {\n                        memo,\n                        topicId,\n                        submitKeyList,\n                        autoRenewAccount,\n                        autoRenewPeriod,\n                        account,\n                        client,\n                        transactionfee,\n                        gasfee,\n                    }\n\n                    let response :any= await topicUpdate(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-topic-update\");\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-topicid\", data.topicId || '');\n                    hederaTag.setAttribute(\"data-transactionfee\", data.transactionfee || '');\n                    hederaTag.setAttribute(\"data-submitkeylist\", data.submitKeyList ? JSON.stringify(data.submitKeyList) : '');\n                    hederaTag.setAttribute(\"data-expirationtime\", data.expirationTime || '');\n                    hederaTag.setAttribute(\"data-autorenewperiod\", data.autoRenewPeriod || '');\n                    hederaTag.setAttribute(\"data-autorenewaccount\", data.autoRenewAccount || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst topicUpdate = async(data:any) =>{\n    const {client,topicId,memo,autoRenewAccount,autoRenewPeriod,submitKeyList,expirationTime} = data;\n    const id = new ConsensusTopicId(topicId);\n\n    let transactionId :any= await new ConsensusTopicUpdateTransaction()\n    .setTopicId(id)\n    .setAdminKey(client._operatorPublicKey)\n\n    // Sets memo if given\n    if (memo && typeof memo === 'string' && memo.trim()) {\n        transactionId.setTopicMemo(memo)\n    }\n\n    // Sets expiry if given\n    if (expirationTime && !isNaN(expirationTime)) {\n        transactionId.setExpirationTime(Date.now() + expirationTime)\n    }\n\n    // Sets autoRenewPeriod if given\n    if (autoRenewPeriod && !isNaN(autoRenewPeriod)) {\n        transactionId.setAutoRenewPeriod(autoRenewPeriod)\n    }\n\n    // Sets autoRenewAccount if given\n    if (autoRenewAccount) {\n        transactionId.setAutoRenewAccount(autoRenewAccount)\n    }\n\n    if (submitKeyList && submitKeyList.length > 0) {\n        let keyList = new KeyList()\n        for (let k of submitKeyList) {\n            keyList.add(Ed25519PublicKey.fromString(k))\n        }\n        transactionId = await transactionId.setSubmitKey(keyList)\n    }\n\n    // Execution to create topic\n    transactionId = await transactionId.execute(client)\n\n    // Fetch transaction reciept\n    const transactionReceipt = await transactionId.getReceipt(client)\n\n    let response = {\n        nodePrecheckcode: transactionReceipt.status.code,\n        receiptStatus: transactionReceipt.status.code,\n        transactionId\n    };\n\n    return response;\n}","import { ConsensusTopicInfoQuery,ConsensusTopicId } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle topic info based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const topicInfoController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,transactionfee,gasfee} = data;\n            let {topicId} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for topic info comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    // Converting to Object form\n                    topicId = util.getAccountIdLikeToObj(topicId,'topic');                 \n\n                    let updatedData :any= {\n                        memo,\n                        topicId,\n                        account,\n                        client,\n                        transactionfee,\n                        gasfee,\n                    }\n\n                    let response :any= await topicInfo(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-topic-info\");\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-transactionfee\", data.transactionfee || '');\n                    hederaTag.setAttribute(\"data-topicid\", data.topicId || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst topicInfo = async(data:any) =>{\n    const {client,topicId} = data;\n    const id = new ConsensusTopicId(topicId);\n    const topicInfo = await new ConsensusTopicInfoQuery()\n    .setTopicId(id)\n    .execute(client)\n\n    let response ={\n        topicInfo\n    }\n\n    return response;\n}","import { ConsensusTopicDeleteTransaction,ConsensusTopicId } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle topic delete based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const topicDeleteController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,transactionfee,gasfee} = data;\n            let {topicId} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for topic delete comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    // Converting to Object form\n                    topicId = util.getAccountIdLikeToObj(topicId,'topic');                 \n\n                    let updatedData :any= {\n                        memo,\n                        topicId,\n                        account,\n                        client,\n                        transactionfee,\n                        gasfee,\n                    }\n\n                    let response :any= await topicDelete(updatedData);\n\n                    // Message Interaction\n                    const message = {res:response,type:'success'};\n                    window.postMessage(message, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-topic-delete\");\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-transactionfee\", data.transactionfee || '');\n                    hederaTag.setAttribute(\"data-topicid\", data.topicId || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst topicDelete = async(data:any) =>{\n    const {client,topicId} = data;\n    const id = new ConsensusTopicId(topicId);\n\n    // Execution to submit Messsage\n    const transactionId = await new ConsensusTopicDeleteTransaction()\n    .setTopicId(id)\n    .execute(client)\n\n    // Fetch transaction reciept\n    const transactionReceipt = await transactionId.getReceipt(client)\n\n    let response = {\n        nodePrecheckcode: transactionReceipt.status.code,\n        receiptStatus: transactionReceipt.status.code,\n        transactionId\n    };\n\n    return response;\n}","import { ConsensusSubmitMessageTransaction,ConsensusTopicId } from '@hashgraph/sdk';\nimport {util} from '../utils';\nimport {helper} from '../helper';\n\n/**\n * A function to handle submit message based on type of the provider;\n * @param {Object} data\n * @returns {any} returns response of txs success if success or throws error\n */\nexport const submitMessageController =(data:any)=> {\n    return new Promise(async(resolve,reject)=>{\n        try{\n           \n            const provider = ((window)as any).provider;\n         \n            const {memo,transactionfee,gasfee,message} = data;\n            let {topicId} = data;\n\n            switch(provider){\n                case 'hardware':\n                    //@TODO flow comming soon\n                    throw \"Hardware option for submit message comming soon!\";\n                    break;\n\n                case 'software':\n                    const accountData :any= ((window as any).HashAccount);\n                    const account:any = util.getAccountIdObjectFull(accountData.accountId);\n\n                    // Creating a Hedera Client\n                    let operator :any= helper.createClientOperator(account.accountIdObject,accountData.keys.privateKey)\n                    let client = helper.createHederaClient(operator,accountData.network);\n                 \n                    // Converting to Object form\n                    topicId = util.getAccountIdLikeToObj(topicId,'topic');                 \n\n                    let updatedData :any= {\n                        memo,\n                        topicId,\n                        message,\n                        account,\n                        client,\n                        transactionfee,\n                        gasfee,\n                    }\n\n                    let response :any= await submitMessage(updatedData);\n\n                    // Message Interaction\n                    const messageI = {res:response,type:'success'};\n                    window.postMessage(messageI, window.location.origin);\n\n                    resolve(response);\n                    break;\n                \n                case 'composer':\n                    const extensionid = (window as any).extensionId;\n                    let domBody = document.getElementsByTagName('body')[0];\n                    let hederaTag = document.createElement(\"hedera-topic-delete\");\n                    hederaTag.setAttribute(\"data-memo\", data.memo || ' ');\n                    hederaTag.setAttribute(\"data-extensionid\", extensionid);\n                    hederaTag.setAttribute(\"data-transactionfee\", data.transactionfee || '');\n                    hederaTag.setAttribute(\"data-topicid\", data.topicId || '');\n                    hederaTag.setAttribute(\"data-message\", data.message || '');\n                    domBody.appendChild(hederaTag);\n                    resolve(data);\n                    break;\n            }\n\n        }catch(e){\n\n            // Message Interaction\n            const message = {res:e,type:'deny'};\n            window.postMessage(message, window.location.origin);\n\n            reject(e);\n        }\n    })\n}\n \n\nconst submitMessage = async(data:any) =>{\n    const {client,topicId,message} = data;\n    const id = new ConsensusTopicId(topicId);\n\n    // Execution to submit Messsage\n    const transactionId = await new ConsensusSubmitMessageTransaction()\n    .setTopicId(id)\n    .setMessage(message)\n    // .sign(operatorPrivateKey) // Must sign by the topic's submitKey\n    .execute(client)\n\n    // Fetch transaction reciept\n    const transactionReceipt = await transactionId.getReceipt(client)\n\n    let response ={\n        nodePrecheckcode: transactionReceipt.status.code,\n        receiptStatus: transactionReceipt.status.code,\n        transactionId\n    }\n\n    return response;\n}","import { common } from \"./common\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Checks validity of contract id\n            let accountId =  data && data.accountID ? common.isAccountIdLike(data.accountID) : '';\n            if (accountId === false) {\n                throw ('Not a valid account id');\n            }\n\n            // Returning whatever seems to be necessary\n            return({\n                accountId\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = (data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                throw ('Data is undefined');\n            }\n    \n            // Checks validity of memo\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw ('Memo size cannot exceed 100 bytes');\n            }\n    \n            // Checks validity of recipient list\n            let recipientList = common.validateRecipientList(data.recipientlist);\n            if (recipientList === false) {\n                throw ('Not a valid recipient list');\n            }\n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                recipientList\n            })\n    \n        }catch(e){\n           throw e;\n        }\n    }\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\nimport { helper } from \"../helper\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of contract id\n            let contractId = common.isAccountIdLike(data.contractid);\n            if (contractId === false) {\n                throw ('Not a valid contract id');\n            }\n    \n            // Checks validity of abi\n            let abi = common.validateArrayList(data.abi);\n            if (abi === false) {\n                throw ('Not a valid abi');\n            }\n\n            // Checks validity of params\n            let params = common.validateArrayList(data.params);\n            if (params === false) {\n                try{\n                    params = util.normalizeArrayValues(params);\n                }catch(e){\n                    throw ('Error in converting param values');\n                }\n                throw ('Not valid params');\n            }\n\n            // Create function params merging abi and params\n            let functionParams = await helper.getContractFunctionParams(abi[0],params);\n\n            // Checks validity of amount\n            let amount = data.amount ? common.isNumber(data.amount) :0;\n            if (amount === false) {\n                throw ('Not valid Amount');\n            }\n\n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.CONTRACT_CALL.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw ('Not valid Transaction Fee');\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.CONTRACT_CALL.GAS_FEE;\n            if (gasfee === false) {\n                throw ('Not valid Gas Fee');\n            }\n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                contractId,\n                abi,\n                params,\n                amount,\n                transactionfee,\n                gasfee,\n                functionParams\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\nimport {helper} from '../helper';\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                //@TODO make error constants\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of file id\n            let fileId = data.fileid ? common.isAccountIdLike(data.fileid) : '';\n            if (fileId === false) {\n                throw 'Not a valid file id';\n            }\n    \n            // Checks validity of abi\n            let abi = common.validateArrayList(data.abi);\n            if (abi === false) {\n                throw 'Not a valid abi';\n            }\n\n            // Checks validity of params\n            let params = common.validateArrayList(data.params);\n            if (params === false) {\n                try{\n                    params = util.normalizeArrayValues(params);\n                }catch(e){\n                    throw 'Error in converting param values';\n                }\n                throw 'Not valid params';\n            }\n\n            // Create function params merging abi and params\n            let functionParams = await helper.getContractFunctionParams(abi[0],params);\n\n            // Checks validity of amount\n            let amount = data.amount ? common.isNumber(data.amount) :0;\n            if (amount === false) {\n                throw 'Not valid Amount';\n            }\n\n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.CONTRACT_DEPLOY.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw 'Not valid Transaction Fee';\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.CONTRACT_DEPLOY.GAS_FEE;\n            if (gasfee === false) {\n                throw 'Not valid Gas Fee';\n            }\n\n            // Checks validity of expiration time\n            let expirationTime = data.expirationtime ? common.isNumber(data.expirationtime) :defaults.CONTRACT_DEPLOY.EXPIRATION_TIME;\n            if (expirationTime === false) {\n                throw 'Not valid Expiration Time';\n            }\n\n            // Checks validity of bytecode\n            let bytecode = common.isString(data.bytecode);\n            if (bytecode === false) {\n                throw 'Not a valid Bytecode';\n            }\n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                fileId,\n                abi,\n                params,\n                amount,\n                transactionfee,\n                expirationTime,\n                gasfee,\n                bytecode,\n                functionParams\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                //@TODO make error constants\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of File Contents\n            let contents = common.validateArrayList(data.fileContent);\n            // @TODO may be we can check is its uint8array convertable if needed\n            contents = contents ? new Uint8Array(contents) : contents;\n            if (contents === false) {\n                throw 'Not valid File Contents';\n            }\n\n            // Checks validity of fileSize\n            let fileSize = data.fileSize ? common.isNumber(data.fileSize) : defaults.FILE_CREATE.FILE_SIZE;\n            if (fileSize === false) {\n                throw 'Not valid File Size';\n            }\n\n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.FILE_CREATE.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw 'Not valid Transaction Fee';\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.FILE_CREATE.GAS_FEE;\n            if (gasfee === false) {\n                throw 'Not valid Gas Fee';\n            }\n\n            // Checks validity of expiration time\n            let expirationTime = data.expirationtime ? common.isNumber(data.expirationtime) :defaults.FILE_CREATE.EXPIRATION_TIME;\n            if (expirationTime === false) {\n                throw 'Not valid Expiration Time';\n            }\n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                fileSize,\n                fileContent:data.fileContent,\n                contents,\n                transactionfee,\n                expirationTime,\n                gasfee,\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                //@TODO make error constants\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of file id\n            let fileId = data.fileId ? common.isAccountIdLike(data.fileId) : '';\n            if (fileId === false) {\n                throw 'Not a valid file id';\n            }\n\n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.FILE_RETRIEVE.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw 'Not valid Transaction Fee';\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.FILE_RETRIEVE.GAS_FEE;\n            if (gasfee === false) {\n                throw 'Not valid Gas Fee';\n            }\n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                fileId,\n                transactionfee,\n                gasfee,\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo / topic name\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of submitKeyList\n            let submitKeyList = data.submitKeyList ? common.validateArrayList(data.submitKeyList) : [];\n            //@TODO In-depth validation of public keys can be done\n            if (submitKeyList === false) {\n                throw ('Not a valid submitKeyList');\n            }\n         \n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.CONTRACT_CALL.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw ('Not valid Transaction Fee');\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.CONTRACT_CALL.GAS_FEE;\n            if (gasfee === false) {\n                throw ('Not valid Gas Fee');\n            }\n              \n            // Checks validity of autoRenewAccount id\n            let autoRenewAccount = data.autoRenewAccount ? common.isAccountIdLike(data.autoRenewAccount):'';\n            if (autoRenewAccount === false) {\n                throw ('Not a valid auto renew account id');\n            }\n\n            // Checks validity of auto renew time\n            let autoRenewPeriod = data.autoRenewPeriod ? common.isNumber(data.autoRenewPeriod) :defaults.TOPIC_CREATE.AUTORENEW_PERIOD;\n            if (autoRenewPeriod === false) {\n                throw 'Not valid Auto Renew Period';\n            }\n    \n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                submitKeyList,\n                autoRenewAccount,\n                autoRenewPeriod,\n                transactionfee,\n                gasfee,\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo / topic name\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of topic id\n            let topicId = common.isAccountIdLike(data.topicId);\n            if (topicId === false) {\n                throw ('Not a valid topic id');\n            }\n\n            // Checks validity of submitKeyList\n            let submitKeyList = data.submitKeyList ? common.validateArrayList(data.submitKeyList) : [];\n            //@TODO In-depth validation of public keys can be done\n            if (submitKeyList === false) {\n                throw ('Not a valid submitKeyList');\n            }\n         \n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.CONTRACT_CALL.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw ('Not valid Transaction Fee');\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.CONTRACT_CALL.GAS_FEE;\n            if (gasfee === false) {\n                throw ('Not valid Gas Fee');\n            }\n              \n            // Checks validity of autoRenewAccount id\n            let autoRenewAccount = data.autoRenewAccount ? common.isAccountIdLike(data.autoRenewAccount):'';\n            if (autoRenewAccount === false) {\n                throw ('Not a valid auto renew account id');\n            }\n\n            // Checks validity of auto renew time\n            let autoRenewPeriod = data.autoRenewPeriod ? common.isNumber(data.autoRenewPeriod) :defaults.TOPIC_CREATE.AUTORENEW_PERIOD;\n            if (autoRenewPeriod === false) {\n                throw 'Not valid Auto Renew Period';\n            }\n    \n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                topicId,\n                submitKeyList,\n                autoRenewAccount,\n                autoRenewPeriod,\n                transactionfee,\n                gasfee,\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo / topic name\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of topic id\n            let topicId = common.isAccountIdLike(data.topicId);\n            if (topicId === false) {\n                throw ('Not a valid topic id');\n            }\n         \n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.CONTRACT_CALL.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw ('Not valid Transaction Fee');\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.CONTRACT_CALL.GAS_FEE;\n            if (gasfee === false) {\n                throw ('Not valid Gas Fee');\n            }\n    \n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                topicId,\n                transactionfee,\n                gasfee,\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo / topic name\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of topic id\n            let topicId = common.isAccountIdLike(data.topicId);\n            if (topicId === false) {\n                throw ('Not a valid topic id');\n            }\n         \n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.CONTRACT_CALL.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw ('Not valid Transaction Fee');\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.CONTRACT_CALL.GAS_FEE;\n            if (gasfee === false) {\n                throw ('Not valid Gas Fee');\n            }\n    \n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                topicId,\n                transactionfee,\n                gasfee,\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","import { common } from \"./common\";\nimport { util } from \"../utils\";\nimport {defaults} from \"../constants/defaults\";\n\n/**\n * Does the needed validation and rectification of data before it is passed on to the service\n * @param {Object} data refers to value passed by function caller\n * @returns {function} callback\n*/\nconst validate = async(data:any) =>{\n        try{\n            // Something is wrong with the data object, return false\n            if (!data) {\n                throw 'Data is undefined';\n            }\n    \n            // Checks validity of memo / topic name\n            let memo = common.isString(data.memo) || '';\n            if (util.stringToBytesSize(memo)>100) {\n                throw 'Memo size cannot exceed 100 bytes';\n            }\n\n            // Checks validity of message\n            let message = common.isString(data.message);\n            message = message && util.stringToBytesSize(message)<4000 ? message : false;\n            if (message===false) {\n                throw 'Message size should be between 1-4kb';\n            }\n\n            // Checks validity of topic id\n            let topicId = common.isAccountIdLike(data.topicId);\n            if (topicId === false) {\n                throw ('Not a valid topic id');\n            }\n         \n            // Checks validity of transactionfee\n            let transactionfee = data.transactionfee ? common.isNumber(data.transactionfee) :defaults.CONTRACT_CALL.TRANSACTION_FEE;\n            if (transactionfee === false) {\n                throw ('Not valid Transaction Fee');\n            }\n\n            // Checks validity of gasfee\n            let gasfee = data.gasfee ? common.isNumber(data.gasfee) :defaults.CONTRACT_CALL.GAS_FEE;\n            if (gasfee === false) {\n                throw ('Not valid Gas Fee');\n            }\n    \n\n            // Returning whatever seems to be necessary\n            return({\n                memo,\n                message,\n                topicId,\n                transactionfee,\n                gasfee,\n            })\n    \n        }catch(e){\n           throw e;\n        }\n}\n\nexport default validate;","\nimport validateAccountInfoData from './accountinfoDataValidation copy';\nimport validateCryptoTransferData from './cryptotransferDataValidation';\nimport validateContractCallData from './contractcallDataValidation';\nimport validateContractDeployData from './contractdeployDataValidation';\nimport validateFileCreateData from './filecreateDataValidation';\nimport validateFileRetrieveData from './fileretrieveDataValidation';\nimport validateTopicCreateData from './topiccreateDataValidation'\nimport validateTopicUpdateData from './topicupdateDataValidation'\nimport validateTopicInfoData from './topicinfoDataValidation'\nimport validateTopicDeleteData from './topicdeleteDataValidation'\nimport validateSubmitMessageData from './submitMessageDataValidation'\n\n\n// Exports validation as one module for the ease to use it\nexport const validateService = async(data:any,type:string)=>{\n    try{\n        switch(type){\n            case 'account-info':\n                return validateAccountInfoData(data);\n\n            case 'crypto-transfer':\n                return validateCryptoTransferData(data);\n\n            case 'contract-call':\n                return await validateContractCallData(data);\n\n            case 'contract-deploy':\n                return await validateContractDeployData(data);\n            \n            case 'file-create':\n                return await validateFileCreateData(data);\n            \n            case 'file-retrieve':\n                return await validateFileRetrieveData(data);\n\n            case 'topic-create':\n                return await validateTopicCreateData(data);\n            \n            case 'topic-update':\n                return await validateTopicUpdateData(data);\n\n            case 'topic-info':\n                return await validateTopicInfoData(data);\n            \n            case 'topic-delete':\n                return await validateTopicDeleteData(data);\n\n            case 'submit-message':\n                return await validateSubmitMessageData(data);\n            \n            default:\n                throw \"No service found!\";\n                \n        }\n    }catch(e){\n        throw e;\n    }\n}","import { accountInfoController } from '../hedera/accountinfo';\nimport { cryptoTransferController } from \"../hedera/cryptotransfer\";\nimport { contractCallController } from \"../hedera/contractcall\";\nimport { contractDeployController } from '../hedera/contractdeploy';\nimport { fileCreateController } from '../hedera/filecreate';\nimport { fileRetrieveController } from '../hedera/fileretrieve';\nimport { topicCreateController } from '../hedera/topiccreate';\nimport { topicUpdateController } from '../hedera/topicupdate';\nimport { topicInfoController } from '../hedera/topicinfo';\nimport { topicDeleteController } from '../hedera/topicdelete';\nimport { submitMessageController } from '../hedera/submitmessage';\n\n\nimport {validateService} from '../validators';\nimport {util} from '../utils';\n\nlet _callback :any= null;\n\nlet _resolve :any= null;\nlet _reject :any= null;\n\n((window)as any).HashAccount={\n    accountId:'0.0.17210',\n    keys:{\n        privateKey:\"302e020100300506032b657004220420dc3460f46df4673acfbce2f2218990fff07e38e24b99c4bb2b8213f6e275f9b9\"\n    },\n    mnemonics:'',\n    network:'testnet'\n};\n\n((window)as any).provider = 'composer';\n\n\n/**\n * triggers exposed check balance and account details call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerCheckBalance = (data:any,callback?:Function) =>{\n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'account-info');\n            await accountInfoController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n            \n            \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed crypto service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerCryptoTransfer = (data:any,callback?:Function) =>{\n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'crypto-transfer');\n            await cryptoTransferController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n            \n            \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed contract call service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerSmartContract = (data:any,callback?:Function) =>{\n    \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'contract-call');\n            await contractCallController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n            \n            \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed contract deploy service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const deploySmartContract = (data:any,callback?:Function) =>{\n    \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'contract-deploy');\n            await contractDeployController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n            \n            \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed file create service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerFileCreate = (data:any,callback?:Function) =>{\n    \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'file-create');\n            await fileCreateController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n            \n            \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed file retrieve service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerFileRetrieve = (data:any,callback?:Function) =>{\n    \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'file-retrieve');\n            await fileRetrieveController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n            \n            \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed topic create service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerTopicCreate = (data:any,callback?:Function) =>{  \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'topic-create');\n            await topicCreateController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n                \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed topic update service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerTopicUpdate = (data:any,callback?:Function) =>{  \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'topic-update');\n            await topicUpdateController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n                \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed topic info service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerTopicInfo = (data:any,callback?:Function) =>{  \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'topic-info');\n            await topicInfoController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n                \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed topic delete service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerTopicDelete = (data:any,callback?:Function) =>{  \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'topic-delete');\n            await topicDeleteController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n                \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * triggers exposed submit message service call\n * @param {Object} data\n * @returns {any} returns response of success if success or throws error\n */\nexport const triggerSubmitMessage = (data:any,callback?:Function) =>{  \n    return new Promise(async(resolve,reject)=>{\n        try{\n            util.isProviderSet();\n            const updatedData = await validateService(data,'submit-message');\n            await submitMessageController(updatedData);\n            _callback=callback\n            _resolve=resolve;\n            _reject=reject;\n                \n        }catch(error){\n            let err = util.getFriendlyErrorObject(error)\n            callback && callback(err);\n            reject(err);          \n        }\n    });\n}\n\n/**\n * Accepts message event and returns to promise and callback\n * @param {MessageEvent} event\n */\nconst receiveMessage =(event:MessageEvent)=> {\n    if (event.data.type && event.origin === window.location.origin) {\n        if(event.data.type.includes('deny')){\n            _callback && _callback(event.data.res,null);\n            _reject && _reject(event.data.res);\n        }else{\n            const rectifiedResponse = util.convertIfArray(event.data.res);\n            _callback && _callback(null, rectifiedResponse);\n            _resolve && _resolve(event.data.res);\n        }\n    }\n}\n\n/**\n * 'message' event listener to catch messages from composer or software responses\n */\nwindow.addEventListener(\"message\", receiveMessage, false);\n","\nimport {sum} from './sum';\nimport {selectProvider} from './middleware';\nimport {setAccount} from './account';\nimport {\n  triggerCheckBalance,\n  triggerCryptoTransfer,\n  triggerSmartContract,\n  deploySmartContract,\n  triggerFileCreate,\n  triggerFileRetrieve,\n  triggerTopicCreate,\n  triggerTopicUpdate,\n  triggerTopicInfo,\n  triggerTopicDelete,\n  triggerSubmitMessage\n} from './controller';\n\n// Exposed Functions\nconst exports = {\n  sum,\n  selectProvider,\n  setAccount,\n  triggerCheckBalance,\n  triggerCryptoTransfer,\n  triggerSmartContract,\n  deploySmartContract,\n  triggerFileCreate,\n  triggerFileRetrieve,\n  triggerTopicCreate,\n  triggerTopicUpdate,\n  triggerTopicInfo,\n  triggerTopicDelete,\n  triggerSubmitMessage,\n};\n\n// Exposing inject to window object\n(window as any).hash={...exports};\n\n// Exposing function using default\nexport default {\n  ...exports\n};\n"],"names":["t","myCustomElement","customElementModalTitle","validate","validateAccountInfoData","validateCryptoTransferData","validateContractCallData","validateContractDeployData","validateFileCreateData","validateFileRetrieveData","validateTopicCreateData","validateTopicUpdateData","validateTopicInfoData","validateTopicDeleteData","validateSubmitMessageData"],"mappings":"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"}